


app.controller('ProfiloDatiPersonaliController', ['$scope', '$state', '$stateParams', '$location', 'mockProfiloService', 'viewModelService', '$timeout', '$rootScope', 'config','dcsMultiTrackService', 'cruscottoService', 'typologiesService', function ($scope, $state, $stateParams, $location, mockProfiloService, viewModelService, $timeout, $rootScope, config, dcsMultiTrackService, cruscottoService, typologiesService) {
    
    var errorMessages = $scope.$parent.errorMessages;
    var profiloService = $scope.$parent.profiloService;
    
    $scope.spidUrl = config.biscotti_url.spid;

    $scope.populateProvinceResidenza = function(province, town, zipCode){
    	typologiesService.provinces({nation : $scope.Model.profilo.indirizzoResidenza.nation.code},function(data){
            $scope.provincesResidenza = data.responseObject.provinces;
            if(province){
	            for(var i in data.responseObject.provinces){
	            	if(province == data.responseObject.provinces[i].code){
	            		$scope.Model.profilo.indirizzoResidenza.province = data.responseObject.provinces[i];
	            		$scope.Model.profilo.indirizzoResidenza.town.description = town;
	            		$scope.Model.profilo.indirizzoResidenza.zipCode = zipCode;
	            		break;
	            	}
	            }
            }
            else{
            	$scope.townsDescriptionsResidenza = null;
                $scope.Model.profilo.indirizzoResidenza.town = '';
                $scope.Model.profilo.indirizzoResidenza.zipCode = '';   
            }
        });
    };

    $scope.selectProvinceResidenza = function(){
        $scope.townsDescriptionsResidenza = null;
        $scope.Model.profilo.indirizzoResidenza.town = '';
        $scope.Model.profilo.indirizzoResidenza.zipCode = '';
        angular.element('#townResidenzaInput').removeClass('disabled');
        angular.element('#townDescriptionResidenza').prop('disabled', false);

    };
        
    $scope.populateProvinceDomicilio = function(province, town, zipCode){
    	typologiesService.provinces({nation : $scope.Model.profilo.indirizzoDomicilio.nation.code}, function(data){
            $scope.provincesDomicilio = data.responseObject.provinces;
            if(province){
	            for(var i in data.responseObject.provinces){
	            	if(province == data.responseObject.provinces[i].code){
	            		$scope.Model.profilo.indirizzoDomicilio.province = data.responseObject.provinces[i];
	            		$scope.Model.profilo.indirizzoDomicilio.town.description = town;
	            		$scope.Model.profilo.indirizzoDomicilio.zipCode = zipCode;
	            		break;
	            	}
	            }
            }
            else{
            	$scope.townsDesriptionsDomicilio = null;
                $scope.Model.profilo.indirizzoDomicilio.town = '';
                $scope.Model.profilo.indirizzoDomicilio.zipCode = '';   
            }
        });
    };

    $scope.selectProvinceDomicilio = function(){
            $scope.townsDescriptionsDomicilio = null;
            $scope.Model.profilo.indirizzoDomicilio.town = '';
            $scope.Model.profilo.indirizzoDomicilio.zipCode = '';
            angular.element('#townDomicilioInput').removeClass('disabled');
            angular.element('#townDescriptionDomicilio').prop('disabled', false);
    }

    $scope.populateProvinceRecapito = function(province, town, zipCode){
    	typologiesService.provinces({nation : $scope.Model.profilo.indirizzoRecapito.nation.code}, function(data){
            $scope.provincesRecapito = data.responseObject.provinces;
            if(province){
	            for(var i in data.responseObject.provinces){
	            	if(province == data.responseObject.provinces[i].code){
	            		$scope.Model.profilo.indirizzoRecapito.province = data.responseObject.provinces[i];
	            		$scope.Model.profilo.indirizzoRecapito.town.description = town;
	            		$scope.Model.profilo.indirizzoRecapito.zipCode = zipCode;
	            		break;
	            	}
	            }
            }
            else{
            	$scope.townsDescriptionsRecapito = null;
                $scope.Model.profilo.indirizzoRecapito.town = '';
                $scope.Model.profilo.indirizzoRecapito.zipCode = '';   
            }
        });
    };

    $scope.selectProvinceRecapito = function(){
        $scope.townsDescriptionsRecapito = null;
        $scope.Model.profilo.indirizzoRecapito.town = '';
        $scope.Model.profilo.indirizzoRecapito.zipCode = '';
        angular.element('#townRecapitoInput').removeClass('disabled');
        angular.element('#townDescriptionRecapito').prop('disabled', false);
    }
    
    $scope.init = function(){
        
    	$scope.certificazioneUrl = config.certificazioneUrl;
        $scope.showRegistrazioneEmail = false;
        $scope.showRecapitoEmail = false;
        $scope.showChangePasswordForm = false;
        $scope.recapitiShow = true;
        $scope.recapitiForm = false;
        
        $scope.editPhone=false;
        $scope.editMobile=false;
        
        $scope.addressesAmbigous = {residence : null, domicile : null, delivery: null};
        $scope.checkboxes = {
            domicilio: false,
            recapito: false
        };
        
    	$scope.Model = $scope.$parent.Model;
    	
        if(typeof $scope.Model.profilo != 'undefined' && typeof $scope.Model.profilo.fullVitalStatistics != 'undefined'){
        
	        $scope.Model.profilo.indirizzoResidenza = {found: false, nation : {code: null, description: null}, province:{code: null, description : null} , town:{description:null}};
	        $scope.Model.profilo.indirizzoDomicilio = {found: false, nation : {code: null, description: null}, province:{code: null, description : null} , town:{description:null}};
	        $scope.Model.profilo.indirizzoRecapito = {found: false, nation : {code: null, description: null}, province:{code: null, description : null} , town:{description:null}};
	        
	        $scope.addressesNonNormalized = {
	        	residence : false,
	            domicile : false,
	            delivery : false
	        }
	        
	        if($scope.Model.profilo.fullVitalStatistics.addresses){
	        	for(var i in $scope.Model.profilo.fullVitalStatistics.addresses){
	        		if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='residence'){
	        			var indirizzo = $scope.Model.profilo.indirizzoResidenza;
	        		}
	        		if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='domicile'){
	        			var indirizzo = $scope.Model.profilo.indirizzoDomicilio;
	        		}
					if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='delivery'){
						var indirizzo = $scope.Model.profilo.indirizzoRecapito;
					}
					indirizzo.dug = $scope.Model.profilo.fullVitalStatistics.addresses[i].dug;
		            indirizzo.toponym = $scope.Model.profilo.fullVitalStatistics.addresses[i].toponym;    
		            indirizzo.streetNumber = $scope.Model.profilo.fullVitalStatistics.addresses[i].streetNumber;
		            indirizzo.nation.description = $scope.Model.profilo.fullVitalStatistics.addresses[i].nationDescription;
		            indirizzo.nation.code = $scope.Model.profilo.fullVitalStatistics.addresses[i].nationCode;
	
		            indirizzo.found = true;
		            if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='residence'){
		            	$scope.populateProvinceResidenza(
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].provinceCode, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].townDescription, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].zipCode
		            	);
	        		}
	        		if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='domicile'){
	        			$scope.populateProvinceDomicilio(
	    					$scope.Model.profilo.fullVitalStatistics.addresses[i].provinceCode, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].townDescription, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].zipCode
	        			);
	        		}
					if($scope.Model.profilo.fullVitalStatistics.addresses[i].type=='delivery'){
						$scope.populateProvinceRecapito(
							$scope.Model.profilo.fullVitalStatistics.addresses[i].provinceCode, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].townDescription, 
		            		$scope.Model.profilo.fullVitalStatistics.addresses[i].zipCode
						);
					}
	        	}
	        	
	        	if($scope.Model.profilo.indirizzoResidenza.found && !$scope.Model.profilo.indirizzoDomicilio.found){
	        		$scope.Model.profilo.indirizzoDomicilio = angular.copy($scope.Model.profilo.indirizzoResidenza);
	        	}
	        	if($scope.Model.profilo.indirizzoResidenza.found && !$scope.Model.profilo.indirizzoRecapito.found){
	        		$scope.Model.profilo.indirizzoRecapito = angular.copy($scope.Model.profilo.indirizzoResidenza);
	        	}
	        	if (!angular.equals($scope.Model.profilo.indirizzoDomicilio, $scope.Model.profilo.indirizzoResidenza)) {
	                $scope.checkboxes.domicilio = true;
	            }
	            if (!angular.equals($scope.Model.profilo.indirizzoRecapito, $scope.Model.profilo.indirizzoResidenza)) {
	                $scope.checkboxes.recapito = true;
	            }
	        }
	        
	        profiloService.fromposteid(function(data){
	        	if(data.valid && data.responseObject.fromPosteId){
	        		$rootScope.spidLogin = $scope.spidLogin = true;
	            }
	            else{
	            	$rootScope.spidLogin = $scope.spidLogin = false; // $rootScope.possesso.nativoSpid;
	            }
	        	callIsUserLock(function(){
		        	profiloService.getaliasmail(function(data){
		                $scope.Model.profilo.fullVitalStatistics.vitalStatistics.emailRegistrazione = data.responseObject.alias;
		                $scope.Model.profilo.fullVitalStatistics.vitalStatistics.statoEmailRegistrazione = data.responseObject.state;
		            },function(err){
		                console.log(err + " error getaliasmail");
		            });
		        });
	        });
	        
	        
	        
	        if($scope.Model.profilo.fullVitalStatistics.vitalStatistics.foreign == 'false'){
	        	var residenceService = typologiesService.italiannations;
	        }
	        else{
	        	var residenceService = typologiesService.foreignnations;
	        }
	        
	        residenceService(function(data){
	            $scope.nationsResidenza = data.responseObject.nations;
	            for(var i in data.responseObject.nations){
	            	if($scope.Model.profilo.indirizzoResidenza.nation.code == data.responseObject.nations[i].code){
	            		$scope.Model.profilo.indirizzoResidenza.nation = data.responseObject.nations[i];
	            		break;
	            	}
	            }
	            customCheckbox();
	        },function(err){
	            console.log(err);
	        });
		        
	        
	        typologiesService.nations(function(data){
	            $scope.nationsDomicilio = data.responseObject.nations;
	            $scope.nationsRecapito = data.responseObject.nations;
	            var found = {
	            	docimile : false, delivery : false
	            }
	            for(var i in data.responseObject.nations){
	            	if($scope.Model.profilo.indirizzoDomicilio.nation.code == data.responseObject.nations[i].code){
	            		$scope.Model.profilo.indirizzoDomicilio.nation = data.responseObject.nations[i];
	            		found.docimile = true;
	            	}
	            	if($scope.Model.profilo.indirizzoRecapito.nation.code == data.responseObject.nations[i].code){
	            		$scope.Model.profilo.indirizzoRecapito.nation = data.responseObject.nations[i];
	            		found.delivery = true;
	            	}
	            	if(found.domicile && found.delivery) break;
	            }
	            customCheckbox();
	        },function(err){
	            console.log(err);
	        });
	    
	        typologiesService.occupations(function(data){
	            $scope.occupations = data.responseObject.occupations;
	            for(var i in data.responseObject.occupations){
	            	if($scope.Model.profilo.fullVitalStatistics.userOccupation.code == data.responseObject.occupations[i].code){
	            		$scope.Model.profilo.fullVitalStatistics.userOccupation = data.responseObject.occupations[i];
	            		break;
	            	}
	            }
	        },function(err){
	            console.log(err);
	        });
	    
	        typologiesService.educationalqualifications(function(data){
	            $scope.educationalQualifications = data.responseObject.educationalQualifications;
	            for(var i in data.responseObject.educationalQualifications){
	            	if($scope.Model.profilo.fullVitalStatistics.userEducationalQualification.code == data.responseObject.educationalQualifications[i].code){
	            		$scope.Model.profilo.fullVitalStatistics.userEducationalQualification = data.responseObject.educationalQualifications[i];
	            		break;
	            	}
	            }
	        },function(err){
	            console.log(err);
	        });
	        
	        if(typeof $scope.Model.profilo != 'undefined' && typeof $scope.Model.profilo.fullVitalStatistics != 'undefined'){
	    	    $scope.$watch('isuserlock', function(newValue, oldValue) {
	    	    	$rootScope.rootisuserlock = newValue;
	    	    	if($scope.Model.profilo != undefined &&
	    	    			typeof $scope.Model.profilo.fullVitalStatistics.contact != undefined && 
	    	    			typeof $scope.Model.profilo.fullVitalStatistics.contact.mobileNumber != undefined){
	    	    		$rootScope.rootusernomobile = !$scope.Model.profilo.fullVitalStatistics.contact.mobileNumber && !newValue;
	    	    	}
	    	    	else{
	    	    		$rootScope.rootusernomobile = false;
	    	    	}
	    	    });
	    	    
	    	    $scope.$watch('Model.profilo.fullVitalStatistics.contact.mobileNumber', function(newValue, oldValue) {
	    	    	if(typeof $scope.Model.profilo.fullVitalStatistics.contact != 'undefined' && 
	    	    		typeof $scope.Model.profilo.fullVitalStatistics.contact.mobileNumber != 'undefined'){
	    	    		$rootScope.rootusernomobile = !$scope.isuserlock && !newValue;
	    	    	}
	    	    	else{
	    	    		$rootScope.rootusernomobile = false;
	    	    	}
	    	    });
	    	    
	    	    $scope.$watch('Model.profilo.indirizzoResidenza.town.description', function(newValue, oldValue) {

		            if($scope.Model.profilo.indirizzoResidenza !== undefined){

		                if(!isEmpty($scope.Model.profilo.indirizzoResidenza)){

		                    var dataToSend = {
		                        province: $scope.Model.profilo.indirizzoResidenza.province.code,
		                        nation: $scope.Model.profilo.indirizzoResidenza.nation.code,
		                        town: newValue
		                    };

		                    var townsDescriptions = [];

		                    typologiesService.towns(dataToSend,function(data){
		                        
		                        for(townArrayId in data.responseObject.towns){
		                            townsDescriptions.push(data.responseObject.towns[townArrayId].description);
		                        }
		                        $scope.townsDescriptionsResidenza = townsDescriptions;  
		                    });
		                }
		            }

		        });
		        
		        $scope.$watch('Model.profilo.indirizzoDomicilio.town.description', function(newValue, oldValue) {

		            if($scope.Model.profilo.indirizzoDomicilio !== undefined){

		                if(!isEmpty($scope.Model.profilo.indirizzoDomicilio)){
		            
		                    var dataToSend = {
		                        province: $scope.Model.profilo.indirizzoDomicilio.province.code,
		                        nation: $scope.Model.profilo.indirizzoDomicilio.nation.code,
		                        town: newValue
		                    };

		                    var townsDescriptions = [];

		                    typologiesService.towns(dataToSend,function(data){
		                    
		                        for(townArrayId in data.responseObject.towns){
		                            townsDescriptions.push(data.responseObject.towns[townArrayId].description);
		                        }
		                        $scope.townsDescriptionsDomicilio = townsDescriptions;  
		                    });
		                }   
		            }

		        });
		        
		        $scope.$watch('Model.profilo.indirizzoRecapito.town.description', function(newValue, oldValue) {

		            if($scope.Model.profilo.indirizzoRecapito !== undefined ){

		                if(!isEmpty($scope.Model.profilo.indirizzoRecapito)){

		                    var dataToSend = {
		                        province: $scope.Model.profilo.indirizzoRecapito.province.code,
		                        nation: $scope.Model.profilo.indirizzoRecapito.nation.code,
		                        town: newValue
		                    };

		                    var townsDescriptions = [];

		                    typologiesService.towns(dataToSend,function(data){
		                    
		                        for(townArrayId in data.responseObject.towns){
		                            townsDescriptions.push(data.responseObject.towns[townArrayId].description);
		                        }
		                        $scope.townsDescriptionsRecapito = townsDescriptions;  
		                    });

		                }
		            }
		        });
	        }	        
    	}
    	else{
    		$rootScope.serverErrorSingolo = true;
    		$rootScope.serverError = "Servizio momentaneamente non disponibile";
    	}
        
        // ???
        if (!viewModelService.Model.isChangedIndirizziProfilo) {
            $scope.datiPersonaliChanged = false;
            viewModelService.Model.isChangedIndirizziProfilo = false;
        }
        else {
            $scope.datiPersonaliChanged = true;
            viewModelService.Model.isChangedIndirizziProfilo = false;
        }
        
        if($state.is('profilo.datiPersonali.indirizzi')){
        	console.log($('#formIndirizzi').position());
        	var top = $('#formIndirizzi').position().top + $('#mypostecontent').position().top - 60;
        	$(window).scrollTop( top );
        }

        
        
        
    }
    
    $scope.$on('myposte-forged', function(event, args) {
        if(!$rootScope.myposteForged){
            console.log('myposte-forged');
            $scope.init();
        }
    });
    
    if($rootScope.myposteForged){
        $scope.init();
    }

    $scope.editDatiPersonali = function () {
        $scope.datiPersonaliChanged = false;
        $state.go('profilo.datiPersonali.indirizzi');
    };

    $scope.editEmailContatto = function () {
        $scope.emailContattoEdit=true; 
        $scope.emailContatto = {email:null};
        $scope.emailContatto.email = $scope.Model.profilo.fullVitalStatistics.contact.email;
    };

    $scope.editEmailRegistrazione = function () {
        $scope.newaliasmail = {email: null, emailCheck: null};
        $scope.newaliasmail.email = $scope.Model.profilo.fullVitalStatistics.vitalStatistics.emailRegistrazione;
        $scope.emailRegistrazioneEdit=true;
    };

    $scope.editTitoloDiStudio = function () {
        $scope.Model.profilo.userEducationalQualification = {code: null, description: null};
        $scope.Model.profilo.userEducationalQualification = $scope.Model.profilo.fullVitalStatistics.userEducationalQualification
        $scope.titoloDiStudioEdit=true;
    };

    $scope.editProfessione = function () {
        $scope.Model.profilo.occupation = {code: null, description: null};
        $scope.Model.profilo.occupation = $scope.Model.profilo.fullVitalStatistics.userOccupation;
        $scope.professioneEdit=true;
    };

    $scope.showRecapitiForm = function () {
        $scope.recapitiShow = false;
        $scope.recapitiForm = true;
    };

    $scope.checkDomicilio = function(){
        reloadElements();
    }

    $scope.checkRecapito = function(){
    	reloadElements();
    }

    $scope.changeRegistrazioneEmail = function (form) {
        profiloService.newaliasmail($scope.newaliasmail, function (data) {

            if (data.errors.length > 0) {
                $scope.errorsEmailRegistrazione = data.errors;
                $scope.emailRegistrazioneError = true;
                console.log(data);
            }
            else {
                console.log(data);
                $scope.Model.profilo.emailRegistrazione = data.email;
                $scope.newaliasmail = {};
                form.$setPristine();
                $scope.emailRegistrazioneEdit = false;
                profiloService.getaliasmail(function(data){
                    $scope.Model.profilo.fullVitalStatistics.vitalStatistics.emailRegistrazione = data.responseObject.alias;
                    $scope.Model.profilo.fullVitalStatistics.vitalStatistics.statoEmailRegistrazione = data.responseObject.state;
                },function(err){
                    console.log(err + " error getaliasmail");
                });
            }
        }, function (err) {
            console.log(err);
            $scope.emailRegistrazioneError = true;
            $scope.errorsEmailRegistrazione = [];
            $scope.errorsEmailRegistrazione.push(errorMessages.serverError);
        });
    };

    $scope.changeContattoEmail = function (form) {
        var recapiti = {
        	contacts : {
	            email: $scope.emailContatto.email,
	            faxNumber: $scope.Model.profilo.fullVitalStatistics.contact.faxNumber,
	            mobileNumber: $scope.Model.profilo.fullVitalStatistics.contact.mobileNumber,
	            mobilePrefix: "0039",
	            phoneNumber: $scope.Model.profilo.fullVitalStatistics.contact.phoneNumber
        	}
        };
        console.log(recapiti);

        profiloService.modifycontacts(recapiti, function (data) {
            if (data.errors.length > 0) {
                $scope.errorsEmailContatto = data.errors;
                $scope.emailContattoError = true;
                console.log(data);
            }
            else {
                console.log(data);
                $scope.datiPersonaliChanged = true;
                $scope.emailContattoEdit = false;
                callIsUserLock();
            }

        });
    }

    $scope.reload = function (form) {
        $scope.Model.profilo.indirizzoResidenza = {};
        $scope.Model.profilo.indirizzoDomicilio = {};
        $scope.Model.profilo.indirizzoRecapito = {};
        $scope.Model.profilo.indexIndirizzoResidenzaRadioButton = undefined;
        $scope.Model.profilo.indexIndirizzoDomicilioRadioButton = undefined;
        $scope.Model.profilo.indexIndirizzoRecapitoRadioButton = undefined;
        $scope.addressesNonNormalized = {
        	residence : false,
            domicile : false,
            delivery : false
        }
        
        $state.go('profilo.datiPersonali', {}, { reload: true });
    }


    $scope.salvaIndirizziProfilo = function () {
        console.log($scope.Model.profilo);

        if($scope.Model.profilo.indexIndirizzoResidenzaRadioButton === -1 || $scope.Model.profilo.indexIndirizzoResidenzaRadioButton === undefined){
	        viewModelService.Model.addresses.indirizzoResidenza.nationCode = $scope.Model.profilo.indirizzoResidenza.nation.code;
	        viewModelService.Model.addresses.indirizzoResidenza.provinceCode =  $scope.Model.profilo.indirizzoResidenza.province.code;
	        viewModelService.Model.addresses.indirizzoResidenza.townDescription = $scope.Model.profilo.indirizzoResidenza.town.description;
	        viewModelService.Model.addresses.indirizzoResidenza.dug = $scope.Model.profilo.indirizzoResidenza.dug;
	        viewModelService.Model.addresses.indirizzoResidenza.toponym = $scope.Model.profilo.indirizzoResidenza.toponym;                             
	        viewModelService.Model.addresses.indirizzoResidenza.streetNumber = $scope.Model.profilo.indirizzoResidenza.streetNumber;
	        viewModelService.Model.addresses.indirizzoResidenza.zipCode = $scope.Model.profilo.indirizzoResidenza.zipCode;
	        viewModelService.Model.addresses.indirizzoResidenza.type = "residence";
	        if($scope.Model.profilo.ResidenzaNonNormalize){
	        	viewModelService.Model.addresses.indirizzoResidenza.toNormalize = false;
	        }
	        else{
		        if($scope.Model.profilo.indexIndirizzoResidenzaRadioButton === -1){
		            viewModelService.Model.addresses.indirizzoResidenza.toNormalize = false;
		        }
		        else{
		            viewModelService.Model.addresses.indirizzoResidenza.toNormalize = true;
		        }
	        }
        }
        else{
            var residenceAmbigous = $scope.addressesAmbigous.residence[$scope.Model.profilo.indexIndirizzoResidenzaRadioButton];
            viewModelService.Model.addresses.indirizzoResidenza.nationCode = $scope.Model.profilo.indirizzoResidenza.nation.code;
            viewModelService.Model.addresses.indirizzoResidenza.provinceCode = residenceAmbigous.provinceCode;
            viewModelService.Model.addresses.indirizzoResidenza.townDescription = residenceAmbigous.townDescription;
            viewModelService.Model.addresses.indirizzoResidenza.dug = residenceAmbigous.dug;
            viewModelService.Model.addresses.indirizzoResidenza.toponym = residenceAmbigous.toponym;
            viewModelService.Model.addresses.indirizzoResidenza.streetNumber = residenceAmbigous.streetNumber;
            viewModelService.Model.addresses.indirizzoResidenza.zipCode = residenceAmbigous.zipCode;
            viewModelService.Model.addresses.indirizzoResidenza.toNormalize = false;
            viewModelService.Model.addresses.indirizzoResidenza.type = "residence";    
        }

        if (!$scope.checkboxes.domicilio) {
            viewModelService.Model.addresses.indirizzoDomicilio.dug = viewModelService.Model.addresses.indirizzoResidenza.dug;
            viewModelService.Model.addresses.indirizzoDomicilio.toponym = viewModelService.Model.addresses.indirizzoResidenza.toponym;
            viewModelService.Model.addresses.indirizzoDomicilio.streetNumber = viewModelService.Model.addresses.indirizzoResidenza.streetNumber;
            viewModelService.Model.addresses.indirizzoDomicilio.nationCode = viewModelService.Model.addresses.indirizzoResidenza.nationCode;
            viewModelService.Model.addresses.indirizzoDomicilio.provinceCode = viewModelService.Model.addresses.indirizzoResidenza.provinceCode;
            viewModelService.Model.addresses.indirizzoDomicilio.townDescription = viewModelService.Model.addresses.indirizzoResidenza.townDescription;
            viewModelService.Model.addresses.indirizzoDomicilio.zipCode = viewModelService.Model.addresses.indirizzoResidenza.zipCode;
            viewModelService.Model.addresses.indirizzoDomicilio.toNormalize = viewModelService.Model.addresses.indirizzoResidenza.toNormalize;
            viewModelService.Model.addresses.indirizzoDomicilio.type = "domicile";
        }
        else {
            if($scope.Model.profilo.indexIndirizzoDomicilioRadioButton === -1 || $scope.Model.profilo.indexIndirizzoDomicilioRadioButton === undefined){
                viewModelService.Model.addresses.indirizzoDomicilio.nationCode = $scope.Model.profilo.indirizzoDomicilio.nation.code;
                viewModelService.Model.addresses.indirizzoDomicilio.provinceCode =  $scope.Model.profilo.indirizzoDomicilio.province.code;
                viewModelService.Model.addresses.indirizzoDomicilio.townDescription = $scope.Model.profilo.indirizzoDomicilio.town.description;
                viewModelService.Model.addresses.indirizzoDomicilio.dug = $scope.Model.profilo.indirizzoDomicilio.dug;
                viewModelService.Model.addresses.indirizzoDomicilio.toponym = $scope.Model.profilo.indirizzoDomicilio.toponym;                             
                viewModelService.Model.addresses.indirizzoDomicilio.streetNumber = $scope.Model.profilo.indirizzoDomicilio.streetNumber;
                viewModelService.Model.addresses.indirizzoDomicilio.zipCode = $scope.Model.profilo.indirizzoDomicilio.zipCode;
                viewModelService.Model.addresses.indirizzoDomicilio.type = "domicile";
                if($scope.Model.profilo.DomicileNonNormalize){
                	viewModelService.Model.addresses.indirizzoDomicilio.toNormalize = false;
                }
                else{
                	if($scope.Model.profilo.indexIndirizzoDomicilioRadioButton === -1){
                		viewModelService.Model.addresses.indirizzoDomicilio.toNormalize = false;
                	}
                	else{
                		viewModelService.Model.addresses.indirizzoDomicilio.toNormalize = true;
                	}
                }
            }
            else{
            	var domicileAmbigous = $scope.addressesAmbigous.domicile[$scope.Model.profilo.indexIndirizzoDomicilioRadioButton];
                viewModelService.Model.addresses.indirizzoDomicilio.nationCode = $scope.Model.profilo.indirizzoDomicilio.nation.code;
                viewModelService.Model.addresses.indirizzoDomicilio.provinceCode = domicileAmbigous.provinceCode;
                viewModelService.Model.addresses.indirizzoDomicilio.townDescription = domicileAmbigous.townDescription;
                viewModelService.Model.addresses.indirizzoDomicilio.dug = domicileAmbigous.dug;
                viewModelService.Model.addresses.indirizzoDomicilio.toponym = domicileAmbigous.toponym;
                viewModelService.Model.addresses.indirizzoDomicilio.streetNumber = domicileAmbigous.streetNumber;
                viewModelService.Model.addresses.indirizzoDomicilio.zipCode = domicileAmbigous.zipCode;
                viewModelService.Model.addresses.indirizzoDomicilio.toNormalize = false;
                viewModelService.Model.addresses.indirizzoDomicilio.type = "domicile";    
            }
        }

        if (!$scope.checkboxes.recapito) {
            viewModelService.Model.addresses.indirizzoRecapito.dug = viewModelService.Model.addresses.indirizzoResidenza.dug;
            viewModelService.Model.addresses.indirizzoRecapito.toponym = viewModelService.Model.addresses.indirizzoResidenza.toponym;
            viewModelService.Model.addresses.indirizzoRecapito.streetNumber = viewModelService.Model.addresses.indirizzoResidenza.streetNumber;
            viewModelService.Model.addresses.indirizzoRecapito.nationCode = viewModelService.Model.addresses.indirizzoResidenza.nationCode;
            viewModelService.Model.addresses.indirizzoRecapito.provinceCode = viewModelService.Model.addresses.indirizzoResidenza.provinceCode;
            viewModelService.Model.addresses.indirizzoRecapito.townDescription = viewModelService.Model.addresses.indirizzoResidenza.townDescription;
            viewModelService.Model.addresses.indirizzoRecapito.zipCode = viewModelService.Model.addresses.indirizzoResidenza.zipCode;
            viewModelService.Model.addresses.indirizzoRecapito.toNormalize = viewModelService.Model.addresses.indirizzoResidenza.toNormalize;
            viewModelService.Model.addresses.indirizzoRecapito.type = "delivery";
        }
        else {
        	
            if($scope.Model.profilo.indexIndirizzoRecapitoRadioButton === -1 || $scope.Model.profilo.indexIndirizzoRecapitoRadioButton === undefined){
                viewModelService.Model.addresses.indirizzoRecapito.nationCode = $scope.Model.profilo.indirizzoRecapito.nation.code;
                viewModelService.Model.addresses.indirizzoRecapito.provinceCode =  $scope.Model.profilo.indirizzoRecapito.province.code;
                viewModelService.Model.addresses.indirizzoRecapito.townDescription = $scope.Model.profilo.indirizzoRecapito.town.description;
                viewModelService.Model.addresses.indirizzoRecapito.dug = $scope.Model.profilo.indirizzoRecapito.dug;
                viewModelService.Model.addresses.indirizzoRecapito.toponym = $scope.Model.profilo.indirizzoRecapito.toponym;                             
                viewModelService.Model.addresses.indirizzoRecapito.streetNumber = $scope.Model.profilo.indirizzoRecapito.streetNumber;
                viewModelService.Model.addresses.indirizzoRecapito.zipCode = $scope.Model.profilo.indirizzoRecapito.zipCode;
                viewModelService.Model.addresses.indirizzoRecapito.type = "delivery";
                if($scope.Model.profilo.DeliveryNonNormalize){
                	viewModelService.Model.addresses.indirizzoRecapito.toNormalize = false;
                }
                else{
	                if($scope.Model.profilo.indexIndirizzoRecapitoRadioButton === -1){
	                	viewModelService.Model.addresses.indirizzoRecapito.toNormalize = false;
	                }
	                else{
	                    viewModelService.Model.addresses.indirizzoRecapito.toNormalize = true;
	                }
                }
            }
            else{
            	var deliveryAmbigous = $scope.addressesAmbigous.delivery[$scope.Model.profilo.indexIndirizzoRecapitoRadioButton];
                viewModelService.Model.addresses.indirizzoRecapito.nationCode = $scope.Model.profilo.indirizzoRecapito.nation.code;
                viewModelService.Model.addresses.indirizzoRecapito.provinceCode = deliveryAmbigous.provinceCode;
                viewModelService.Model.addresses.indirizzoRecapito.townDescription = deliveryAmbigous.townDescription;
                viewModelService.Model.addresses.indirizzoRecapito.dug = deliveryAmbigous.dug;
                viewModelService.Model.addresses.indirizzoRecapito.toponym = deliveryAmbigous.toponym;
                viewModelService.Model.addresses.indirizzoRecapito.streetNumber = deliveryAmbigous.streetNumber;
                viewModelService.Model.addresses.indirizzoRecapito.zipCode = deliveryAmbigous.zipCode;
                viewModelService.Model.addresses.indirizzoRecapito.toNormalize = false;
                viewModelService.Model.addresses.indirizzoRecapito.type = "delivery";    
            }
        }

        var dataToSend = {
            addresses: [viewModelService.Model.addresses.indirizzoResidenza,
                        viewModelService.Model.addresses.indirizzoDomicilio,
                        viewModelService.Model.addresses.indirizzoRecapito]
        };
        
        $scope.addressesNonNormalized = {
        	residence : false,
            domicile : false,
            delivery : false
        }
        
        $rootScope.recapitoCustom = !$scope.checkboxes.recapito;
        $rootScope.domicilioCustom = !$scope.checkboxes.domicilio;

        profiloService.modifyaddresses(dataToSend, function (data) {
            if (data.errors.length > 0) {
                for (var i = 0; i < data.errors.length; i++) {
                    if(data.errors[i].message === 'normalization_ambiguous' ){
                        if(data.errors[i].name === 'residence'){
                            $scope.Model.profilo.indirizzoResidenza.townDescription = data.responseObject.addressMap.residence[0].townDescription;
                            $scope.addressesAmbigous.residence = data.responseObject.addressMap.residence;
                        }
                        if(data.errors[i].name === 'domicile'){
                            $scope.Model.profilo.indirizzoDomicilio.townDescription = data.responseObject.addressMap.domicile[0].townDescription;
                            $scope.addressesAmbigous.domicile = data.responseObject.addressMap.domicile;
                        }
                        if(data.errors[i].name === 'delivery'){
                            $scope.Model.profilo.indirizzoRecapito.townDescription = data.responseObject.addressMap.delivery[0].townDescription;
                            $scope.addressesAmbigous.delivery = data.responseObject.addressMap.delivery;
                        }   
                    }
                    if(data.errors[i].message === 'normalization_error' ){
                        if(data.errors[i].name === 'residence'){
                            $scope.addressesNonNormalized.residence = true;
                        }
                        if(data.errors[i].name === 'domicile'){
                        	if($scope.checkboxes.domicilio){
                            	$scope.addressesNonNormalized.domicile = true;
	                        }
                        }
                        if(data.errors[i].name === 'delivery'){
                        	if($scope.checkboxes.recapito){
                        		$scope.addressesNonNormalized.delivery = true;
                        	}
                        }   
                    }
                }
                reloadElements();
                $scope.errorsAddresses = data.errors;
                $scope.addressesError = true;
            }
            else{
            	$rootScope.modificaIndirizzi = true;
            	var params = $location.search();
            	if(params.ref){
            		$rootScope.backRef = params.ref;
            	}
                callIsUserLock();
                $rootScope.forceSuccess = true;
                $state.go('profilo.datiPersonali', {}, { reload: true});
            }
        }, function (err) {
            console.log(err);
        });

    };
    $scope.backProfilo = function () {
        $scope.Model.profilo.indirizzoResidenza = {};
        $scope.Model.profilo.indirizzoRecapito = {};
        $scope.Model.profilo.indexIndirizzoResidenzaRadioButton = undefined;
        $scope.Model.profilo.indexIndirizzoDomicilioRadioButton = undefined;
        $scope.Model.profilo.indexIndirizzoRecapitoRadioButton = undefined;
        $scope.addressesNonNormalized = {
        	residence : false,
            domicile : false,
            delivery : false
        }
        $state.go('profilo', {}, { reload: true });
    };

    $scope.closeRecapitiForm = function () {
        $scope.recapitiShow = true;
        $scope.recapitiForm = false;
    };
    
    $scope.salvaTelefonoFisso = function(){
    	
    	var recapiti =
        {
           contacts : {
               email: $scope.Model.profilo.fullVitalStatistics.contact.email,
               faxNumber: $scope.Model.profilo.fullVitalStatistics.contact.faxNumber,
               mobileNumber: $scope.Model.profilo.fullVitalStatistics.contact.mobileNumber,
               mobilePrefix: "0039",
               phoneNumber: $scope.telefonoFisso
           }
       };
        
        $scope.salvaRecapiti(recapiti);
    };
    
    $scope.salvaTelefonoCellulare = function(){
    	
    	var recapiti =
        {
           contacts : {
               email: $scope.Model.profilo.fullVitalStatistics.contact.email,
               faxNumber: $scope.Model.profilo.fullVitalStatistics.contact.faxNumber,
               mobileNumber: $scope.telefonoCellulare,
               mobilePrefix: "0039",
               phoneNumber: $scope.Model.profilo.fullVitalStatistics.contact.phoneNumber
            	   
           }
       };
    	$scope.salvaRecapiti(recapiti);
    };
    

    $scope.salvaRecapiti = function (recapiti) {
    	console.log(recapiti);
        profiloService.modifycontacts(recapiti, function (data) {
        	if(data.valid){
    			$scope.editPhone = false;
    			$scope.editMobile = false;
    			$scope.emailContattoEdit = false;
            }
            callIsUserLock();
        }, function (err) {
            $scope.recapitiError = true;
            $scope.errorsRecapiti = [];
            $scope.errorsRecapiti.push(errorMessages.serverError);   
        });

    };

    $scope.salvaTitoloDiStudio = function () {
        
        profiloService.modifyusereducationalqualification(
        	{
        		code: $scope.Model.profilo.userEducationalQualification.code
        	}, 
        	function (data){
        		if(data.valid){
        			$scope.Model.profilo.fullVitalStatistics.userEducationalQualification = $scope.Model.profilo.userEducationalQualification;
        			$scope.titoloDiStudioEdit = false;
        		}
                callIsUserLock();
        });
    	
    };
    
    $scope.salvaProfessione = function () {
        profiloService.modifyuseroccupation(
        	{
        		code: $scope.Model.profilo.occupation.code
        	}, 
        	function (data){
        		if(data.valid){
        			$scope.Model.profilo.fullVitalStatistics.userOccupation = $scope.Model.profilo.occupation;
        		}
        		$scope.professioneEdit = false;
                callIsUserLock();
        });
    	
    };
    
    function reloadElements(){
        $timeout(function(){
            customRadio();
            customCheckbox();
        });
    }

    function callIsUserLock(callback){
        $timeout(function(){
            profiloService.isuserlock(function(data){
                if(data.valid && data.responseObject){
                    $scope.isuserlock = true;
                    if($state.is('profilo.datiPersonali.indirizzi')){
                    	$state.go('profilo.datiPersonali');
                    }
                }
                else{
                    $scope.isuserlock = false;
                }
                if(!($scope.isuserlock && $state.is('profilo.datiPersonali.indirizzi'))){
                	callback();
                }
            });      
        });  
    }

    function isEmpty(obj) {
        return Object.keys(obj).length === 0;
    }
    
    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {
    	if(toState.name == 'profilo.datiPersonali.indirizzi' && $scope.isuserlock){
    		$state.go('profilo.datiPersonali');
    	}
    });

}])
