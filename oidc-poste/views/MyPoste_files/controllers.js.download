


var doAnalitycs = doAnalitycs || function () {};
var dataStorico;
var dataStart;
var confermaAppuntamento = appuntamento.controller("confermaAppuntamento", ["$scope", "$http", "appuntamentoService", "hostService", "$sce", function ($scope, $http, appuntamentoService, hostService, $sce) {
	var serverHost, urlValue;

	hostService.getHost().then(function (response) {
		urlValue = response.data; // -- success logic
		serverHost = urlValue["HOST_SVILUPPO"];
		$scope.infoPrivacy = urlValue["infoPrivacy"];

		$scope.appuntamentoData = appuntamentoService.getAppuntamentoData();

		$scope.go = function (path) {
			appuntamentoService.setAppuntamentoData($scope.appuntamentoData);
			$(".intestazione").scrollTop();
			window.location = path;

		};
		$scope.stampaAppuntamento = function () {
			$http.get(serverHost + '/modulistica/stampa/' + $scope.appuntamentoData.contractGuid + '/' + $scope.appuntamentoData.codiceRichiesta, {
				responseType: 'arraybuffer',
				withCredentials: true
			}).success(function (data) {
				var file = new Blob([data], {
					type: 'application/pdf'
				});

				if (window.navigator && window.navigator.msSaveOrOpenBlob) {
					window.navigator.msSaveOrOpenBlob(file);
				} else {
					var objectUrl = URL.createObjectURL(file);
					window.open(objectUrl);
				}

			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];

				//chiamata al webtrend per errore
				//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
				var dataLayer = {
					'text_err_alert': data
				}
	
				if(_satellite !== undefined && _satellite !== null) {
					_satellite.track('id_err_alert'); //CORRETTO?
				}
			});
		};
		$scope.salvaCalendario = function () {
			var icsMSG = getCalendario($scope.appuntamentoData);
			//window.open( "data:text/calendar;charset=utf8," + escape(icsMSG));
			var file = new Blob([icsMSG], {
				type: 'text/calendar'
			});
			var filename = 'calendar_appuntamento_pi.ics';

			if (window.navigator && window.navigator.msSaveOrOpenBlob) {
				window.navigator.msSaveOrOpenBlob(file, filename);

			} else {

				var a = document.getElementById('hiddenSalvaCalendario');
				a.href = window.URL.createObjectURL(file);
				a.download = filename;
				a.click();
			}

		};

		$scope.updateEmail = function () {
			//chiamata al webtrend
			doAnalitycs('DCSext.contatore_mail_appto', '1');
			var req = {
				method: 'POST',
				url: serverHost + '/retrieveUser/modifyUserContacts/' + $scope.appuntamentoData.userId + '/' + $scope.appuntamentoData.cfPartner + '/' + $scope.appuntamentoData.email,
				headers: {
					'Content-Type': 'application/json'
				},

				withCredentials: true
			};
			$http(req).success(function (data) {

				$('#myModal_email').modal('hide');
			}).error(function (data, status, error) {
				$('#myModal_email').modal('hide');
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];

				//chiamata al webtrend per errore
				//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
				var dataLayer = {
					'text_err_alert': data
				}
	
				if(_satellite !== undefined && _satellite !== null) {
					_satellite.track('id_err_alert'); //CORRETTO?
				}
			});

		};

		$scope.closeModal = function () {
			$('#myModal_email').modal('hide');

		};

		if (typeof ($scope.appuntamentoData.oldEmail) == 'undefined' || $scope.appuntamentoData.oldEmail == '') {

			//chiamata al webtrend
			doAnalitycs('DCS.dcsuri', 'alias_appto_c_appto_confermato', 'DCSext.motivo_appuntamento', $scope.appuntamentoData.codice, 'WT.si_cs', '1', 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '6');

			$('#myModal_email').modal('show');
		} else {
			$('#myModal_email').modal('hide');
		}
	});

	// renderizza il value in Html
	$scope.getHtml = function (value) {
		return $sce.trustAsHtml(value);
	};

	$scope.closeModal = function () {
		$('#myModal_info').modal('hide');

	};

	$scope.openModal = function () {
		$('#myModal_info').modal('show');

	};
	window.scrollTo(0, 0);
}]);

var appuntamentoForm = appuntamento.controller("appuntamentoForm", ["$scope", "$http", "appuntamentoService", "hostService", "$sce", "$sanitize", "$location", "$rootScope", "$timeout", "$window", function ($scope, $http, appuntamentoService, hostService, $sce, $sanitize, $location, $rootScope, $timeout, $window) {
	var serverHost, urlValue, secureLogin, serviceIsLogged;

	hostService.getHost().then(function (response) {
		urlValue = response.data; // -- success logic
		serverHost = urlValue["HOST_SVILUPPO"];
		secureLogin = urlValue["SECURE_LOGIN"];
		serviceIsLogged = urlValue["SERVICE_ISLOGGED"];


		$scope.appuntamentoData = appuntamentoService.getAppuntamentoData();

		var minIntervallo;
		var maxIntervallo;
		var minDate;

		// chiamata per recupero max e min per calendario
		$http.get(serverHost + '/appuntamento/intervalloGiorni', {
			withCredentials: true
		}).success(function (data) {
			minIntervallo = data.minGiorni;
			maxIntervallo = data.maxGiorni;
			dataStorico = $scope.appuntamentoData.dataStorico;

			dataStart = new Date();
			var day = dataStart.getDate() + parseInt(minIntervallo);
			dataStart.setDate(day);
			dataStart.setHours(0);
			dataStart.setMinutes(0);
			dataStart.setSeconds(0);
			dataStart.setMilliseconds(0);

			//    	if(typeof(dataStorico)!='undefined' && dataStorico != ''){
			//    		minDate = dataStorico;
			//    	}else{
			minDate = dataStart.getDate() + "-" + (dataStart.getMonth() + 1) + "-" + dataStart.getFullYear();
			//    	}
			$('.datepicker').datepicker({
				format: 'dd-mm-yyyy',
				startDate: minDate,
				endDate: '+' + maxIntervallo + 'd',
				autoclose: true,
				beforeShowDay: initNoSundaysOrHolydays,
				language: 'it'


			}).on('changeDate', function () {

				var UP = $scope.appuntamentoData.frazionario;
				var dataSel = $('#calendarInput').val();
				var dataSelReplace = dataSel.replace(/-/g, "");

				$http.get(serverHost + '/disponibilita/' + dataSelReplace + '/' + UP + '/' + $scope.appuntamentoData.bpPartner, {
					withCredentials: true
				}).success(function (data) {

					// se provengo dallo storico rendo disponibile la fascia
					// oraria dell'appuntamento corrente
					if ($scope.appuntamentoData.hasOwnProperty("dataStorico")) {
						var fasciaStorico = {
							giorno: dataStorico,
							oraInizio: $scope.appuntamentoData.oraInizio,
							oraFine: $scope.appuntamentoData.oraFine
						};
						var d;

						if (dataSel == '') {
							d = splitToDate($scope.appuntamentoData.dataAppuntamento);
						} else {
							d = splitToDate(dataSel);
						}

						if (d < dataStart) {
							if (dataSel == dataStorico) {
								data.splice(0, data.length, fasciaStorico);
							} else {
								data.splice(0, data.length);
							}
						} else if (dataSel == dataStorico) {
							data.splice(0, 0, fasciaStorico);
						}
					}

					$scope.appuntamentoData.dataSelected = dataSel;
					var date = dataSel.split('-');
					var day = (date[0] == '01' ? '1Â°' : date[0]);
					var monthIndex = date[1];
					var year = date[2];


					$scope.appuntamentoData.dataSelectedToShow = day + ' ' + monthNames[parseInt(monthIndex) - 1] + ' ' + year;
					$scope.appuntamentoData.fasceList = data;
					$scope.appuntamentoData.fasciaOraria = null;
					$("#dropdownMenu2").text("Seleziona orario");


				}).error(function (data, status, error) {
					$scope.errorMessages = [{
						"cod": status,
						"msg": data
					}];

					//chiamata al webtrend per errore
					//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
					var dataLayer = {
						'text_err_alert': data
					}
		
					if(_satellite !== undefined && _satellite !== null) {
						_satellite.track('id_err_alert'); //CORRETTO?
					}
				});


			});

			$scope.fasciaOrariaPattern = (function () {
				return {
					test: function (value) {
						if (typeof ($scope.appuntamentoData.fasceList) != 'undefined' && value != '' && $scope.appuntamentoData.fasceList.length == 0) {
							var msgFasciaEmpty = urlValue.msgFasciaEmpty;

							$scope.msgFasciaEmpty = msgFasciaEmpty;
							return false;
						}
						return true;
					}
				};
			})();


		}).error(function (data, status, error) {
			$scope.errorMessages = [{
				"cod": status,
				"msg": data
			}];

		});


		var that = $scope;

		var codMotivo = $location.search().hMotivo;
		var currentLocation = window.location.href;

		var myInt1 = setInterval(motiviCheck, 100);
		//    if(!codMotivo && !$scope.appuntamentoData.hasOwnProperty("isModifica") && !$scope.appuntamentoData.hasOwnProperty("motivoSelected")){
		//    	$scope.errorMessages = [{"cod":"0000","msg":"Motivo appuntamento non valorizzato"}];
		//    } 

		function motiviCheck() {
			if ($("body").data("motivi-load")) {
				if (codMotivo && $scope.motivi) {
					for (var i = 0; i < $scope.motivi.length; i++) {
						var motivo = $scope.motivi[i];
						if (motivo.codice == codMotivo) {
							//$("#dropdownMenu1").text(motivo.descrizione);

							var appData = appuntamentoService.getAppuntamentoData();
							//custom select
							var myselect = $('select');
							$(myselect).each(function () {

								var selectedOption = motivo.descrizione;
								$(this).next(".holder").text(selectedOption);
								$('select > option:first').hide();
								//writeInfo("customselect partito");
								$(this).attr('disabled', 'disabled');
								$(this).closest("span").attr("class", "select-wrapper form-control select-disabled");

							});



							//fine custom select
							$scope.motivoSelected = motivo;
							appData.motivoSelected = motivo.descrizione;
							appData.codice = motivo.codice;
							appuntamentoService.setAppuntamentoData(appData);
							//$('#hMotivo').val('');
							break;
						}
					}
				}
				clearInterval(myInt1);
			}
		}
		//chiamata al webtrend
		doAnalitycs('DCS.dcsuri', 'alias_appto_c_motivo', 'DCSext.motivo_appuntamento', codMotivo, 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '1');

		//check login tramite chiamata a servizio wcs
		$http.get(serviceIsLogged, {
			withCredentials: true
		}).success(function (data) {

			if (!data.logged) {
				$window.location.href = secureLogin + '?_referer=' + encodeURIComponent(currentLocation);

			}

		}).error(function (data, status, error) {
			$scope.errorMessages = [{
				"cod": status,
				"msg": data
			}];
		});

		var userId, codiceFiscale;
		$http.get(serverHost + '/retrieveUser/user/getUserIdCF', {
			withCredentials: true
		}).success(function (data) {
			userId = data.userId;
			codiceFiscale = data.codFiscale;

			if (userId && codiceFiscale) {
				$scope.appuntamentoData.userId = userId;
				$scope.appuntamentoData.cfPartner = codiceFiscale;
			} else {
				//$scope.errorMessages = [{"cod":"0000","msg":"Accesso non autorizzato"}];
				$window.location.href = secureLogin + '?_referer=' + encodeURIComponent(currentLocation);

			}


			$http.get(serverHost + '/retrieveUser/user/' + $scope.appuntamentoData.userId + '/' + $scope.appuntamentoData.cfPartner, {
				withCredentials: true
			}).success(function (data) {
				that.appuntamentoData.nomeCliente = titleCase(data.nome);
				that.appuntamentoData.cognomeCliente = titleCase(data.cognome);
				that.appuntamentoData.numeroCellulare = data.telefonoCellulare;
				that.appuntamentoData.cfPartner = data.codFiscale;
				that.appuntamentoData.bpPartner = data.codiceBp;
				that.appuntamentoData.oldEmail = data.email;

				var emailDef = that.appuntamentoData.oldEmail;

				$http.get(serverHost + '/retrieveUser/userContacts/' + $scope.appuntamentoData.bpPartner + '/' + $scope.appuntamentoData.cfPartner, {
					withCredentials: true
				}).success(function (data) {

					$scope.emails = [];
					$scope.emails.push('Aggiungi');
					if (data.emailList != '') {
						var emailArray = data.emailList;
						for (i = 0; i < emailArray.length; i++) {
							$scope.emails.push(emailArray[i]);
						}
					}
					// ricarico la mail dal servizio solo se non provengo dal
					// riepilogo
					var emailFromStorico = that.appuntamentoData.appEmailStorico;
					if (!$scope.appuntamentoData.hasOwnProperty("isModifica")) {
						if (typeof ($scope.appuntamentoData.emailFormat) == 'undefined') {
							if (emailDef) {
								that.appuntamentoData.email = emailDef;
								that.appuntamentoData.emailFormat = $scope.formatEmail(emailDef);

								if ($.inArray(emailDef, $scope.emails) == -1) {
									$scope.emails.push(emailDef);
								}
							} else {
								that.appuntamentoData.email = that.emails[1];
								that.appuntamentoData.emailFormat = $scope.formatEmail(that.emails[1]);
							}
						}

					} else {
						if ($scope.appuntamentoData.hasOwnProperty("isModifica")) {
							if (that.appuntamentoData.email != emailFromStorico) {
								that.appuntamentoData.emailFormat = $scope.formatEmail(that.appuntamentoData.email);
							} else {
								that.appuntamentoData.email = emailFromStorico;
								that.appuntamentoData.emailFormat = $scope.formatEmail(emailFromStorico);
							}
							if ($.inArray(emailFromStorico, $scope.emails) == -1) {
								$scope.emails.push(emailFromStorico);
							}
						}
					}

					if (emailDef) {


						if ($.inArray(emailDef, $scope.emails) == -1) {
							$scope.emails.push(emailDef);
						}
					}

				}).error(function (data, status, error) {
					$scope.errorMessages = [{
						"cod": status,
						"msg": data
					}];
				});


			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];
			});
		}).error(function (data, status, error) {
			$scope.errorMessages = [{
				"cod": status,
				"msg": data
			}];
		});

		$scope.changeEmail = function (newEmail) {
			that.appuntamentoData.email = newEmail;
			$scope.emailValue = newEmail;

			if (newEmail != 'Aggiungi') {
				var mailFormat = $scope.formatEmail(newEmail);
				that.appuntamentoData.emailFormat = mailFormat;
				$('[name=emailAppuntamento]').attr('disabled', 'disabled');
			} else {
				that.appuntamentoData.emailFormat = '';
				$('[name=emailAppuntamento]').removeAttr('disabled');
			}

			$('[name=emailAppuntamento]').change();

		};

		$scope.abilitaMappa = function () {
			$scope.cercaUP = true;
			$('#ama-autocomplete').removeAttr('disabled');
			$('#ama-search').removeAttr('disabled');
			$('#iconSearch2').removeClass("ng-hide");
			$('#iconSearch').addClass("ng-hide");
		};

		$scope.formatEmail = function (mail) {
			if (mail && mail != 'Aggiungi') {
				var result = '';
				var mailFirst = mail.charAt(0);
				var mailSplit = mail.split('@');
				var mailPre = mailSplit[0];
				var mailPost = mailSplit[1];

				if (mailPre.length > 4) {
					// var mailPre = mailPre.substring(1);
					// parte asteriscata
					var mailPrePad = "*".toString().padLeft("*", mailPre.length - 3);
					// ultimi 3 caratteri prima di @
					var mailLastThree = mailPre.substring(mailPre.length - 3, mailPre.length);

					result = mailFirst.concat(mailPrePad).concat(mailLastThree).concat('@').concat(mailPost);
				} else {
					// primo carattere in chiaro e il resto asteriscato prima di @
					result = mailFirst.concat("*".toString().padLeft("*", mailPre.length - 1)).concat('@').concat(mailPost);
				}

				return result;
			} else {
				return mail;
			}
		};

		$scope.go = function (path) {

			if ($scope.appuntamentoData.email == 'Aggiungi') {
				$scope.appuntamentoData.email = $scope.appuntamentoData.emailFormat;
			}

			appuntamentoService.setAppuntamentoData($scope.appuntamentoData);
			$(".intestazione").scrollTop();
			window.location = path;
		};


		// ricaricamento fasce orarie in modalitÃ  modifica
		if ($scope.appuntamentoData.hasOwnProperty("isModifica")) {
			var UP = $scope.appuntamentoData.frazionario;
			var dataSel = $('#calendarInput').val();
			var dataSelReplace = dataSel.replace(/-/g, "");
			dataStorico = $scope.appuntamentoData.dataStorico;
			var dataAppuntamento = $scope.appuntamentoData.dataAppuntamento;

			if (dataSel == dataStorico || dataAppuntamento == dataStorico) {
				// chiamata per recupero max e min per calendario
				//	    	    $http.get(serverHost+'/appuntamento/intervalloGiorni').success(function(data1){
				//	    	    	minIntervallo = data1.minGiorni;

				$http.get(serverHost + '/disponibilita/' + dataStorico.replace(/-/g, "") + '/' + UP + '/' + $scope.appuntamentoData.bpPartner, {
					withCredentials: true
				}).success(function (data) {
					$scope.appuntamentoData.fasceList = data;
					var oraInizioNuovaFascia = $scope.appuntamentoData.oraInizio.replace(":", ".");
					var oraFineNuovaFascia = $scope.appuntamentoData.oraFine.replace(":", ".");
					var nuovaFascia = {
						giorno: dataSel.replace(/-/g, "/"),
						oraInizio: oraInizioNuovaFascia,
						oraFine: oraFineNuovaFascia
					};
					var d;

					if (dataSel == '') {
						d = splitToDate(dataAppuntamento);
					} else {
						d = splitToDate(dataSel);
					}

					if (d < dataStart) {
						$scope.appuntamentoData.fasceList.splice(0, data.length, nuovaFascia);
						data.splice(0, data.length, nuovaFascia);
					} else {
						$scope.appuntamentoData.fasceList.splice(0, 0, nuovaFascia);
					}

					$("#dropdownMenu2").text($scope.appuntamentoData.fasciaOraria);


				}).error(function (data, status, error) {
					$scope.errorMessages = [{
						"cod": status,
						"msg": data
					}];
				});
				//	    	    }).error(function(data,status,error){ 
				//		    	      $scope.errorMessages = [{"cod":status,"msg":data}];
				//		        });
			}


		}


		$scope.cercaUP = true;
		$('#ama-autocomplete').removeAttr('disabled');
		$('#ama-search').removeAttr('disabled');
		$scope.fraz = {};

		$scope.mapVisible = true;
		$scope.mapVisible2 = false;

		$scope.$watch(
			function (scope) {
				return $scope.appuntamentoData.frazionario;
			},
			function (newValue, oldValue) {
				console.log("Watch: " + newValue + " " + oldValue);
				(newValue + " " + oldValue);
				if (newValue || oldValue) {
					$scope.mapVisible2 = true;
				}
			}
		);

		var myTimer = setInterval(function () {

			$("body").data("mappa-noovle", true);

			var appunt = appuntamentoService.getAppuntamentoData();

			if (typeof (appunt.frazionario) != 'undefined') {
				$scope.mapVisible = true;
				$scope.cercaUP = false;
				$('#ama-autocomplete').attr('disabled', 'disabled');
				$('#ama-search').attr('disabled', 'disabled');


				$('#ama-autocomplete').val(appunt.indUfficio);
				$('#iconSearch2').removeClass("ng-hide");
				$('#iconSearch').addClass("ng-hide");

				if (appunt.hasOwnProperty("isModifica")) {
					$rootScope.$broadcast('scanner-started', {
						idMap: 'mapCerca',
						frazionario: appunt.frazionario,
						searchLoc: appunt.indUfficio
					});
				}
				clearInterval(myTimer);
				return;
			}
			if ($scope.amaLoaded && $scope.appuntamentoData.bpPartner && $scope.appuntamentoData.cfPartner) {
				$http.get(serverHost + '/ufficioPostale/radicamento/' + $scope.appuntamentoData.bpPartner + '/' + $scope.appuntamentoData.cfPartner, {
					withCredentials: true
				}).success(function (data) {
					var indirizzoUP = data.indirizzo;
					var indRad;

					if (typeof (indirizzoUP) != 'undefined') {
						var frazionario = data.frazionario;

						var ind = indirizzoUP.indirizzo;
						var civ = indirizzoUP.civico;
						var city = indirizzoUP.descrizioneComune;
						var prov = indirizzoUP.siglaProvincia;
						var naz = indirizzoUP.codiceNazione;
						var indRad = ind;

						if (civ != '') {
							indRad = indRad + ' ' + civ;
						}
						if (city != '') {
							indRad = indRad + ', ' + city;
						}
						if (prov != '') {
							indRad = indRad + ', ' + prov;
						}
						if (naz != '') {
							indRad = indRad + ', ' + naz;
						}

						if (typeof (indRad) != 'undefined' && indRad != '') {
							$('#ama-autocomplete').val(indRad);

							$('#iconSearch2').removeClass("ng-hide");
							$('#iconSearch').addClass("ng-hide");

							$rootScope.$broadcast('scanner-started', {
								idMap: 'mapCerca',
								frazionario: frazionario,
								searchLoc: indRad
							});

							$scope.mapVisible = true;
						} else {
							$scope.mapVisible = false;
						}
					} else {
						$scope.mapVisible = false;
					}

					return indRad;

				}).error(function (data, status, error) {
					$scope.mapVisible = false;
					$scope.errorMessages = [{
						"cod": status,
						"msg": data
					}];
				});
				clearInterval(myTimer);
			}

		}, 1000);

		$scope.$on('amaLoaded', function (event, args) {
			$scope.amaLoaded = true;

		});
		$scope.$on('showCercaUfficio', function () {
			console.log('showCercaUfficio');
			$scope.cercaUP = true;


		});
		$scope.$on('scanner-started', function (event, args) {

			if (!$scope.mapVisible) {
				$scope.mapVisible = true;

			}
		});

		$scope.$on('geolocation', function (event, args) {

			if (!$scope.mapVisible) {
				$scope.mapVisible = true;

			}
		});

		$scope.$on('searchData', function (event, args) {
			if (args.response.length == 1 && $scope.appuntamentoData.hasOwnProperty("isModifica")) {
				var x_gradi = args.response[0].q.component.f.f;
				var y_gradi = args.response[0].q.component.b.b;
				//inverto l'ordine delle coordinate
				$scope.appuntamentoData.x_gradi = x_gradi;
				$scope.appuntamentoData.y_gradi = y_gradi;
			} else
			if (args.response.length > 0) {
				$scope.upMessagge = '';
				//$scope.upMessaggeSottoMsg = '';
				$scope.abilitaMappa();

				if ($scope.changeMotivo && $scope.appuntamentoData.frazionario) {
					var trovato = false;
					for (var i = 0; i < args.response.length; i++) {
						if (args.response[i].id == $scope.appuntamentoData.frazionario) {
							console.log('UP Abilitato al nuovo motivo');
							trovato = true;
							break;
						}
					}

					if (!trovato) {
						$scope.appuntamentoData.frazionario = null;
						$scope.appuntamentoData.dataSelected = null;
						$scope.appuntamentoData.faseList = null;
						$scope.appuntamentoData.fasciaOraria = null;
						$("#dropdownMenu2").text('');


						$scope.upMessagge = urlValue.UPnnAbilitatoMotivo;
						$scope.$apply();
					}
				}

				if (!$scope.mapVisible) {
					$scope.mapVisible = true;

				}
				//chiamata al webtrend
				doAnalitycs('DCS.dcsuri', 'alias_appto_c_ufficio', 'DCSext.motivo_appuntamento', $scope.appuntamentoData.codice, 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '2');
			} else if (args.response.length == 0) {
				$scope.upMessagge = urlValue.UDnnDisponibili.replace('XXXX', $('#ama-autocomplete').val());
				$scope.$apply();
			}
			$scope.changeMotivo = false;
		});

		$scope.changeMotivo = false;

		$scope.$on('changeMotivo', function (event, param) {
			$scope.changeMotivo = true;
			//sbianco campi della pagina
			$scope.cercaUP = true;
			$('#ama-autocomplete').removeAttr('disabled');
			$('#ama-search').removeAttr('disabled');
			$('#ama-autocomplete').val('');
			$('#iconSearch2').addClass("ng-hide");
			$('#iconSearch').removeClass("ng-hide");
			//$scope.fraz = {};
			$scope.mapVisible = false;
			$scope.mapVisible2 = false;
			$scope.appuntamentoData.dataSelected = null;
			$scope.appuntamentoData.faseList = null;
			$scope.appuntamentoData.fasciaOraria = null;


		});

		// funzione per recupero dati mappa
		$scope.$on('upSelected', function (event, args) {
			console.log('upSelected. ' + args);

			//chiamata al webtrend
			doAnalitycs('DCS.dcsuri', 'alias_appto_c_codice_conferma', 'DCSext.motivo_appuntamento', $scope.appuntamentoData.codice, 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '3');

			// alert('dati ufficio: '+args.loc.frazionario_ext + ' ' +
			// args.loc.descrizione);
			var UP = args.loc.frazionario_ext;
			var descrizione = args.loc.descrizione;
			var ind = args.loc.indirizzo;
			var cap = args.loc.cap;
			var prov = args.loc.cod_provincia;
			var city = args.loc.localita;
			var x_gradi = args.loc.x_gradi;
			var y_gradi = args.loc.y_gradi;

			var distanza = Math.round(args.loc.GeoCMS_Distance);
			var metrica_distanza = 'm';
			if (distanza > 1000) {
				distanza = Math.round((distanza / 1000) * 100) / 100;
				var metrica_distanza = 'Km';
			}

			$scope.appuntamentoData.dataSelected = null;
			$scope.appuntamentoData.faseList = null;
			$scope.appuntamentoData.fasciaOraria = null;
			$("#dropdownMenu2").text("Seleziona orario");
			$scope.appuntamentoData.x_gradi = y_gradi;
			$scope.appuntamentoData.y_gradi = x_gradi;
			//$('#ama-autocomplete').val('');

			// var UP = '51032';
			// alert('data changed - UP: '+UP);
			// controllo abilitazione UP
			$http.get(serverHost + '/ufficioPostale/abilitato/' + UP + '/' + $scope.appuntamentoData.userId, {
				withCredentials: true
			}).success(function (data) {
				var abilitatoUP = data;
				// var abilitatoUP = false;
				// alert(data);
				if (abilitatoUP) {
					$scope.appuntamentoData.frazionario = UP;
					$scope.appuntamentoData.indUfficio = ind + ', ' + cap + ' ' + city + ' (' + prov + ')';
					$scope.upMessagge = '';
					//$scope.upMessaggeSottoMsg = '';
					$('[name=calendarInput]').removeAttr('disabled');
					$('[name=calendarInput2]').removeAttr('disabled');

					$scope.fraz.nome = descrizione;
					$scope.fraz.distanza = distanza + ' ' + metrica_distanza;
					$scope.fraz.indirizzo = ind + ', ' + cap + ' ' + city + ' (' + prov + ')';
					$scope.appuntamentoData.upselected = $scope.fraz;
					$scope.cercaUP = false;
					$('#ama-autocomplete').attr('disabled', 'disabled');
					$('#ama-search').attr('disabled', 'disabled');
					$scope.mapVisible2 = true;
					$scope.$apply();
				} else {
					var upMessagge = $sce.trustAsHtml(urlValue.UPnnAbilitato + '</br></br><div style="font-size:0.8em !important">' + urlValue.UPnnAbilitatoMsg + '</div>');
					// $scope.upMessagge = $sanitize($sce.parseAsHtml(upMessagge));
					$scope.upMessagge = upMessagge;
					//$scope.upMessaggeSottoMsg = urlValue.UPnnAbilitatoMsg;
					$scope.appuntamentoData.frazionario = null;
					$scope.appuntamentoData.indUfficio = null;
					$('[name=calendarInput]').attr('disabled', 'disabled');
					$('[name=calendarInput2]').attr('disabled', 'disabled');
				}
				$scope.abilitatoUP = abilitatoUP;
				// $scope.$apply();
			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];

				//chiamata al webtrend per errore
				//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
				var dataLayer = {
					'text_err_alert': data
				}
	
				if(_satellite !== undefined && _satellite !== null) {
					_satellite.track('id_err_alert'); //CORRETTO?
				}
			});

		});

		if (typeof ($scope.appuntamentoData.indUfficio) != 'undefined') {
			var indirizzoUP = $scope.appuntamentoData.indUfficio;

			$('#ama-autocomplete').val(indirizzoUP);

			$scope.cercaUP = false;
			$('#ama-autocomplete').attr('disabled', 'disabled');
			$('#ama-search').attr('disabled', 'disabled');
			$('#iconSearch2').removeClass("ng-hide");
			$('#iconSearch').addClass("ng-hide");

		}

		appuntamentoService.setAppuntamentoData($scope.appuntamentoData);

		// controllo email
		$scope.ph_email = (function () {
			// var regexp =
			// /^([0-9a-zA-Z]([-_\\.]*[0-9a-zA-Z]+)*)@([0-9a-zA-Z]([-_\\.]*[0-9a-zA-Z]+)*)[\\.]([a-zA-Z]{2,9})$/;
			var regexp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
			return {
				test: function (value) {
					if ($scope.emailValue != 'Aggiungi' && $('[name=emailAppuntamento]').attr('disabled') == 'disabled') {
						return true;
					}
					return regexp.test(value);
				}
			};
		})();


		$scope.showCercaUP = function () {

			var appunt = appuntamentoService.getAppuntamentoData();

			if (typeof (appunt.frazionario) != 'undefined') {
				$scope.mapVisible = true;
				$scope.cercaUP = true;
				$('#ama-autocomplete').removeAttr('disabled');
				$('#ama-search').removeAttr('disabled');

				var frazionario = appunt.frazionario;
				var indRad = appunt.indUfficio;
				$('#ama-autocomplete').val(indRad);
				if (typeof (indRad) != 'undefined' && indRad != '') {
					if ($scope.appuntamentoData.hasOwnProperty("isModifica")) {

						$rootScope.$broadcast('scanner-started', {
							idMap: 'mapCerca',
							frazionario: frazionario,
							searchLoc: indRad
						});

					} else {
						$rootScope.$broadcast('scanner-started', {
							idMap: 'mapCerca',
							frazionario: null,
							searchLoc: indRad
						});
					}

				}

			}

		};
	});

}]);

var riepilogoAppuntamento = appuntamento.controller("riepilogoAppuntamento", ["$scope", "$http", "appuntamentoService", "hostService", "$sce",
	function ($scope, $http, appuntamentoService, hostService, $sce) {

		var serverHost, urlValue;
		hostService.getHost().then(function (response) {
			urlValue = response.data; // -- success logic
			serverHost = urlValue["HOST_SVILUPPO"];

			$scope.infoPrivacy = urlValue["infoPrivacy"];

			$scope.appuntamentoData = appuntamentoService.getAppuntamentoData();
			var dataInizio;
			var dataFine;
			var dataSelected = $scope.appuntamentoData.dataSelected;
			var dataSelectedReplaced = dataSelected.replace(/-/g, "/").replace(/\s/g, "");
			var fascia = $scope.appuntamentoData.fasciaOraria.toUpperCase().replace("DALLE", "").replace("ALLE", "-").replace(/\s/g, "");
			var fasciaSplitted = fascia.split("-");
			dataInizio = dataSelectedReplaced + " " + fasciaSplitted[0];
			dataFine = dataSelectedReplaced + " " + fasciaSplitted[1];
			$scope.appuntamentoData.dataInizio = dataInizio;
			$scope.appuntamentoData.dataFine = dataFine;
			$http.get(serverHost + '/bpResponsabile/' + $scope.appuntamentoData.frazionario, {
				withCredentials: true
			}).success(function (data) {
				$scope.appuntamentoData.bpConsulente = data;
			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];
			});

			$("body").data("mappa-noovle", false);

			// $scope.appuntamentoData.userId =
			// $scope.appuntamentoData.nomeCliente+"."+$scope.appuntamentoData.cognomeCliente;

			var esigenze = [{
					"mandante": "",
					"codice": $scope.appuntamentoData.codice,
					"descrizione": $scope.appuntamentoData.motivoSelected
				}

			];
			$scope.appuntamentoData.esigenze = esigenze;
			$(".intestazione").scrollTop();

			$scope.go = function (path) {
				// salvo il telefono nelle note
				if (typeof ($('[name=numTelefono]').attr('disabled')) == 'undefined') {
					$scope.appuntamentoData.numTelefono = $scope.appuntamentoData.userTel;
					$scope.appuntamentoData.noteInviate = {
						"note": $scope.appuntamentoData.userTel
					};
				}


				if ($scope.appuntamentoData.hasOwnProperty("isModifica")) {

					var dateSplitted = $scope.appuntamentoData.dataSelected.split('-');
					$scope.appuntamentoData.dataAppuntamento = new Date(dateSplitted[2], dateSplitted[1] - 1, dateSplitted[0], 0, 0, 0, 0);
				}
				//chiamata al webtrend
				doAnalitycs('DCS.dcsuri', 'alias_appto_c_conferma_data', 'DCSext.motivo_appuntamento', $scope.appuntamentoData.codice, 'DCSext.fascia_oraria_appto', $scope.appuntamentoData.fasciaOraria, 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '4');


				// da decommentare per effettivo salvataggio
				var req = {
					method: 'POST',
					url: serverHost + '/appuntamento/nuovo',
					headers: {
						'Content-Type': 'application/json'
					},
					data: $scope.appuntamentoData,
					withCredentials: true
				};
				$http(req)
					.success(function (data) {
						$scope.appuntamentoData.codiceRichiesta = data.objectId;

						$http.get(serverHost + '/appuntamento/storico/' + $scope.appuntamentoData.bpPartner + '/' + $scope.appuntamentoData.cfPartner, {
							withCredentials: true
						}).success(function (data) {

							for (var i in data) {
								var app = data[i];
								if (app.objectId == $scope.appuntamentoData.codiceRichiesta) {

									$scope.appuntamentoData.documentiDaConsegnare = app.documentiDaConsegnare;
									$scope.appuntamentoData.contractGuid = app.contractGuidString;
									$scope.appuntamentoData.indirizzoUP = app.indirizzoUP.indirizzo + '-' + app.indirizzoUP.descrizioneComune;
									appuntamentoService.setAppuntamentoData($scope.appuntamentoData);
									// $scope.documenti = app.documentiDaConsegnare;

									$(".intestazione").scrollTop();
									window.location = path;
									break;
								}
							}
						});
						// invio email di conferma appuntamento
						$scope.datiEmail = {};
						$scope.datiEmail.emailAddress = $scope.appuntamentoData.email;
						$scope.datiEmail.dataAppuntamento = $scope.appuntamentoData.dataSelected.trim();
						$scope.datiEmail.orarioAppuntamento = $scope.appuntamentoData.fasciaOraria;
						$scope.datiEmail.motivoAppuntamento = $scope.appuntamentoData.motivoSelected;
						$scope.datiEmail.objectIdAppuntamento = $scope.appuntamentoData.codiceRichiesta;
						$scope.datiEmail.indirizzoAppuntamento = $scope.appuntamentoData.indUfficio;
						$scope.datiEmail.paramsStorico = 'userId=' + $scope.appuntamentoData.userId + '&cf=' + $scope.appuntamentoData.cfPartner;
						$scope.datiEmail.nomeUtente = $scope.appuntamentoData.nomeCliente;
						$scope.datiEmail.latIndirizzo = $scope.appuntamentoData.x_gradi;
						$scope.datiEmail.longIndirizzo = $scope.appuntamentoData.y_gradi;
						var icsMSG = getCalendario($scope.appuntamentoData);
						$scope.datiEmail.attachment = icsMSG;
						var req = {
							method: 'POST',
							url: serverHost + '/sendEmail/send',
							headers: {
								'Content-Type': 'application/json'
							},
							data: $scope.datiEmail,
							withCredentials: true
						};
						$http(req)
							.success(function (data) {

							}).error(function (data, status, error) {
								$scope.errorMessages = [{
									"cod": status,
									"msg": data
								}];

								//chiamata al webtrend per errore
								//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
								var dataLayer = {
									'text_err_alert': data
								}
					
								if(_satellite !== undefined && _satellite !== null) {
									_satellite.track('id_err_alert'); //CORRETTO?
								}
							});
					}).error(function (data, status, error) {
						$scope.errorMessages = [{
							"cod": status,
							"msg": data
						}];

						//chiamata al webtrend per errore
						//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
						var dataLayer = {
							'text_err_alert': data
						}
			
						if(_satellite !== undefined && _satellite !== null) {
							_satellite.track('id_err_alert'); //CORRETTO?
						}
					});


			};

			$scope.goToIndex = function (path) {

				if (typeof ($('[name=numTelefono]').attr('disabled')) == 'undefined') {
					$scope.appuntamentoData.userTel = 'Aggiungi';
				}

				if ($scope.appuntamentoData.userTel == '') {
					$scope.appuntamentoData.numTelefono = '';
				}
				appuntamentoService.setAppuntamentoData($scope.appuntamentoData);
				window.location = path;
			};

		});

		$scope.ph_numbr = (function () {
			var regexp = /^(\d{6,30}|3\d{8,9})?$/;
			return {
				test: function (value) {
					if ($scope.appuntamentoData.userTel != 'Aggiungi' && $('[name=numTelefono]').attr('disabled') == 'disabled') {
						return true;
					}
					return regexp.test(value);
				}
			};
		})();

		$scope.closeModal = function () {
			$('#myModal_info').modal('hide');

		};

		$scope.openModal = function () {
			$('#myModal_info').modal('show');

		};

		// renderizza il value in Html
		$scope.getHtml = function (value) {
			return $sce.trustAsHtml(value);
		};
		window.scrollTo(0, 0);
	}
]);

var accordionCTRL = appuntamento.controller("StoricoCtrl", ["$scope", "$http", "appuntamentoService", "hostService", "$sce", "$location", "$compile", "mySharedService", "$window", "$q", "$timeout", "$rootScope", function ($scope, $http, appuntamentoService, hostService, $sce, $location, $compile, mySharedService, $window, $q, $timeout, $rootScope) {
	$scope.oneAtATime = true;
	var serverHost, urlValue, ticketsXWRKEYUrl, ticketsListUrl, secureLogin, serviceIsLogged;
	
	var geocmsurl = "https://www.geocms.it/server/api/read/object/jsonp?key=geo-posteitalianespa&project=Uffici&query=%5Bfrazionario_ext%5D%3D%5B:frazionario:%5D&frontend=rest&callback=JSON_CALLBACK";
	if(typeof gestore_attese_config != "undefined" && gestore_attese_config.geocms_url){
		geocmsurl = gestore_attese_config.geocms_url;
	}
	hostService.getHost().then(function (response) {

		urlValue = response.data; // -- success logic
		serverHost = urlValue["HOST_SVILUPPO"];
		serverHostPip = urlValue["HOST_SVILUPPO_PIP"];
		ticketsXWRKEYUrl = urlValue["WEBACTIVATION"];
		ticketsListUrl = urlValue["WEBLISTTICKETS"];
		ticketsDisdettaUrl = urlValue["DISDETTATICKETS"];
		secureLogin = urlValue["SECURE_LOGIN"];
		serviceIsLogged = urlValue["SERVICE_ISLOGGED"];

		var currentLocation = window.location.href;
//		var appDataService = appuntamentoService.getAppuntamentoData();
//		var hModifica, hDisdetta;
		$("body").data("mappa-noovle", false);

		$scope.gotoAnchor = function (x) {
			var newHash = 'collapse' + x;
			if ($location.hash() !== newHash) {
				// set the $location.hash to `newHash` and
				// $anchorScroll will automatically scroll to it
				$location.hash('collapse' + x);
			} else {
				// call $anchorScroll() explicitly,
				// since $location.hash hasn't changed
				$anchorScroll();
			}
		};
/*
		// recupero parametro per pulsante modifica
		// TODO - GESTIRE ERRORE
		$http.get(serverHost + '/readParam/paramModifica', {
			withCredentials: true
		}).success(function (data) {
			$scope.hModifica = data;

		}).error(function (data, status, error) {
			// $scope.errorMessages = [{
			// 	"cod": status,
			// 	"msg": data
			// }]; 
		});

		// recupero parametro per pulsante disdetta
		// TODO - GESTIRE ERRORE
		$http.get(serverHost + '/readParam/paramDisdetta', {
			withCredentials: true
		}).success(function (data) {
			$scope.hDisdetta = data;
		}).error(function (data, status, error) {
			// $scope.errorMessages = [{
			// 	"cod": status,
			// 	"msg": data
			// }];
		});
*/
		$scope.currentPage = 1;
		$scope.pageSize = 10;

		$scope.pageChangeHandler = function (num) {
			console.log('going to page ' + num);
		};
		$scope.goToDeleteTicket = function (group) {

			var idTicket = group.objectId;
			var email = group.email;
			var xwrkey = $scope.xwrkey;

			//disdetta tickets 
			var req = {
				method: 'GET',
				url: ticketsDisdettaUrl.replace("v2","v3") + idTicket+"/"+email,
				headers: {
					'X-WRKEY': xwrkey
				},

				withCredentials: true
			};


			$http(req).success(function (data, status, headers, config) {

				$scope.xwrkey = config.headers["X-WRKEY"];
				$scope.riepilogoDisdettaTicket = true;
				doAppuntamentiCalls();

			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];
				var dataLayer = {
					'text_err_alert': data
				}
	
				if(_satellite !== undefined && _satellite !== null) {
					_satellite.track('id_err_alert'); //CORRETTO?
				}
			});
			
			
			
		};


		// Dallo storico vado in modifica/disdici
		$scope.goToUpdateDelete = function (path, group) {
			var app = $scope.appuntamentoData;

			// rimappo i campi dello storico in appuntamentoData
			app.bpConsulente = group.bpPartner;
			app.contractGuidString = group.contractGuidString;
			app.dataAppuntamento = group.date.replace(/\//g, "-");

			app.dataSelected = group.date.replace(/\//g, "-");
			app.dataStorico = group.date.replace(/\//g, "-");
			// app.dataStorico = group.dataAppuntamento;
			app.dateToFormattedString = group.dateToFormattedString;
			app.documenti = group.documenti;
			app.documentiDaConsegnare = group.documentiDaConsegnare;
			app.esigenze = group.esigenze;
			var d = new Date();
			var tSplit = group.time.split(":");
			d.setHours(tSplit[0]);
			d.setMinutes(tSplit[1]);
			var hour = ("0" + d.getHours()).slice(-2);
			var hourEnd = ("0" + (d.getHours() + 1)).slice(-2);
			var min = ("0" + d.getMinutes()).slice(-2);
			app.fasciaOraria = 'DALLE ' + hour + "." + min + ' ALLE ' + hourEnd + '.' + min;
			app.oraInizio = group.time;
			app.oraFine = hourEnd + ':' + min;
			app.frazionario = group.frazionario;
			app.id = group.id;
			app.indirizzoUP = group.indirizzoUP;
			app.nomeUP = group.nomeUP;
			app.noteInviate = group.noteInviate;
			app.notes = group.notes;
			app.objectId = group.objectId;
			app.motivoSelected = group.esigenze[0].descrizione;
			app.codice = group.esigenze[0].codice;
			app.stato = group.stato;
			app.time = group.time;
			app.isModifica = 'Y';
			app.numTelefono = group.numTelefono;
			app.userTel = app.numTelefono;
			app.email = group.email;
			app.appEmailStorico = group.email;
			var dataSel = app.dataSelected;
			var date = dataSel.split('-');
			var day = (date[0] == '01' ? '1Â°' : date[0]);
			var monthIndex = date[1];
			var year = date[2];

			app.dataSelectedToShow = day + ' ' + monthNames[parseInt(monthIndex) - 1] + ' ' + year;
			app.indUfficio = group.indirizzoUP.indirizzo + ', ' + group.indirizzoUP.cap + ' ' + group.indirizzoUP.descrizioneComune + ' (' + group.indirizzoUP.siglaProvincia + ')';

			app.upselected = {};
			app.upselected.indirizzo = app.indUfficio;
			app.upselected.nome = app.nomeUP;
			app.upselected.distanza = '0m';

			appuntamentoService.setAppuntamentoData(app);

			$scope.motivoSelected = group.esigenze[0];
			window.location = path;

		};
		// visualizzazione mappa appuntamento
		$scope.showMap = function (group, index) {
			window.open("https://www.google.it/maps/place/"+group.indirizzoUP.indirizzo + ", "+group.indirizzoUP.cap+ " "+group.indirizzoUP.descrizioneComune);
//			var frazionario = group.frazionario;
//			var indirizzo = group.indirizzoUP.indirizzo;
//			var comune = group.indirizzoUP.descrizioneComune;
//
//			$scope.stringRicerca = comune + ' ' + indirizzo;
//
//			mySharedService.prepForBroadcast({
//				'frazionario': frazionario,
//				'indirizzo': $scope.stringRicerca
//			});
//
//			$.get(appContext + '/pages/view-map.html', function (data) {
//				angular.element($('#mappaID')).append($compile(data)($scope));
//				$('#myModal_mappa').modal('show');
//			});
		};


		// $scope.appuntamentoData = appDataService;
		$scope.urlTicket = urlValue.urlTicket;

		function getTickets() {

			var deferred = $q.defer();
			
			var tickets = [];
			var promises = [];

			var makeTicketPromise = function(ticketDataArray, email){
				return $http.jsonp(geocmsurl.replace(':frazionario:', ticketDataArray[2])).success(function (response) {
					if (response.status.message == 'OK' && response.layers && response.layers[0]
							&& response.layers[0].objects && response.layers[0].objects[0]
							&& response.layers[0].objects[0].data && response.layers[0].objects[0].data.main) 
					{
						var upLastTicket = response.layers[0].objects[0].data.main;
						
						var dataAppuntamentoFormat = new Date(ticketDataArray[3].slice(0, 4), ticketDataArray[3].slice(4, 6) - 1, ticketDataArray[3].slice(6, 8), ticketDataArray[3].slice(8, 10), ticketDataArray[3].slice(10, 12), ticketDataArray[3].slice(12, 14));

						if (dataAppuntamentoFormat.getTime() > new Date().getTime()) {
							var ticketToAdd = {
								"id": ticketDataArray[0],
								"esigenze": [{
									"mandante": "",
									"codice": "",
									"descrizione": ticketDataArray[1]
								}],
								"nomeUP": upLastTicket.descrizione,
								"dataAppuntamento": dataAppuntamentoFormat,
								"stato": "ATTIVO",
								"notes": {

								},
								"documentiDaConsegnare": [],
								"indirizzoUP": {
									"dug": "",
									"indirizzo": upLastTicket.indirizzo,
									"civico": "",
									"cap": upLastTicket.cap,
									"descrizioneComune": upLastTicket.descr_comune,
									"siglaProvincia": upLastTicket.cod_provincia,
									"nazione": "",
									"codiceNazione": "",
									"codiceProvincia": upLastTicket.cod_provincia,
									"codiceComune": "",
									"codiceOpzionale": ""
								},
								"bpPartner": "",
								"frazionario": ticketDataArray[2],
								"objectId": ticketDataArray[0],
								"numTelefono": "",
								"email": email,
								"dateToFormattedString": "",
								"date": "",
								"time": ticketDataArray[3].slice(8, 10) + ':' +ticketDataArray[3].slice(10, 12),
								"documenti": [],

								"noteInviate": {

								},
								"contractGuidString": ""
							};
						
							
							tickets.push(ticketToAdd);
							return ticketToAdd;
						}
					}

				}).error(function (data, status, error) {
//								$scope.errorMessages = [{
//									"cod": status,
//									"msg": data
//								}];
				})
			};
			
			//recupero xwrkey 
			$http.get(ticketsXWRKEYUrl, {
				withCredentials: true
			}).success(function (data, status, headers, config) {
				var xwrkey = config.headers["X-WRKEY"];
				$scope.xwrkey = xwrkey;
				//recupero tickets 
				var req = {
					method: 'GET',
					url: ticketsListUrl,
					headers: {
						'X-WRKEY': xwrkey
					},

					withCredentials: true
				};
				

				$http(req).success(function (data) {

					var listTicketsArray = data.tickets;

					for (var i = 0; i < listTicketsArray.length; i++) {
						var ufficio = "";
						var ticketDataArray = listTicketsArray[i].TICKET_DATA.split("|");

						promises.push(
							makeTicketPromise(ticketDataArray, listTicketsArray[i].EMAIL)
						);
					}
					if(promises.length > 0){
						$q.all(promises).then(function(responses){
							deferred.resolve(tickets);
						})
					}
					else{
						$timeout(function(){
							deferred.resolve([]);
						})
					}
				}).error(function (data, status, error) {
					//$scope.errorMessages = [{"cod":status,"msg":data}];
					deferred.resolve([]);
				});

			}).error(function (data, status, error) {
				//$scope.errorMessages = [{"cod":status,"msg":data}];
				deferred.resolve([]);
			});
			
			return deferred.promise;
		}
		
		

		function getStorico() {

			var deferred = $q.defer();

			if (!appDataService.bpPartner || !appDataService.cfPartner) {

				var userId, codiceFiscale;

				$http.get(serverHost + '/retrieveUser/user/getUserIdCF', {
					withCredentials: true
				}).then(function (data) {
					userId = data.userId;
					codiceFiscale = data.codFiscale;
					if (!userId || !codiceFiscale) {
						//$scope.errorMessages = [{"cod":"0000","msg":"Accesso non autorizzato"}];
						// $window.location.href = secureLogin + '?_referer=' + encodeURIComponent(currentLocation);
						deferred.resolve([]);
					}
					else{

						$http.get(serverHost + '/retrieveUser/user/' + userId + '/' + codiceFiscale, {
							withCredentials: true
						}).then(function (data) {
							appDataService.bpPartner = data.codiceBp;
							appDataService.cfPartner = codiceFiscale;
							
							if (!appDataService.bpPartner || !appDataService.cfPartner) {
								deferred.resolve([]);
							}
							else{
								$http.get(serverHost + '/appuntamento/storico/' + appDataService.bpPartner + '/' + appDataService.cfPartner, {
									withCredentials: true
								}).then(function (response) {
									deferred.resolve(response);
								}, function (response) {
									deferred.resolve([]);
								});
							}
						}, function(){
							deferred.resolve([]);
						});
					}
				}, function(){
					deferred.resolve([]);
				})
			} else {
				$http.get(serverHost + '/appuntamento/storico/' + appDataService.bpPartner + '/' + appDataService.cfPartner, {
					withCredentials: true
				}).then(function (response) {
					deferred.resolve(response);
				}, function (response) {
					deferred.resolve([]);
				});
			}

			return deferred.promise;
		}

		function getAppuntamenti() {

			var deferred = $q.defer();

			// Appuntamenti Service Promise
			var reqAppuntamenti = {
				method: 'POST',
				url: serverHostPip + '/listaAppuntamenti',
				headers: {
					'Content-Type': 'application/json'
				},
				data: {
					"cfPivaCliente": "STLTNT80A41H501H",
					"listaStatiAppuntamento": ["A", "P", "C"]
				}
			}

			$http(reqAppuntamenti).then(function (response) {
				var data = response.data ? response.data.data : null;
				if (data) {
					let listToAdd = [];
					data.listaAppuntamenti.forEach(function (app) {
						// var appToAdd = {
						// 	"id": "V+tIQMaTG6rhAAAACsuKDA==",
						// 	"esigenze": [{
						// 		"mandante": "",
						// 		"codice": "",
						// 		"descrizione": ticketDataArray[1]
						// 	}],
						// 	"nomeUP": ufficio != null ? ufficio.descrizione : '',
						// 	"dataAppuntamento": dataAppuntamentoFormat,
						// 	"stato": "ATTIVO",
						// 	"notes": {

						// 	},
						// 	"documentiDaConsegnare": [],
						// 	"indirizzoUP": {
						// 		"dug": ufficio.indirizzo != null ? ufficio.indirizzo.dug : '',
						// 		"indirizzo": ufficio.indirizzo != null ? ufficio.indirizzo.indirizzo : '',
						// 		"civico": "",
						// 		"cap": ufficio.indirizzo != null ? ufficio.indirizzo.cap : '',
						// 		"descrizioneComune": ufficio.indirizzo != null ? ufficio.indirizzo.descrizioneComune : '',
						// 		"siglaProvincia": ufficio.indirizzo != null ? ufficio.indirizzo.siglaProvincia : '',
						// 		"nazione": ufficio.indirizzo != null ? ufficio.indirizzo.siglaProvincia : '',
						// 		"codiceNazione": ufficio.indirizzo != null ? ufficio.indirizzo.codiceNazione : '',
						// 		"codiceProvincia": ufficio.indirizzo != null ? ufficio.indirizzo.codiceProvincia : '',
						// 		"codiceComune": ufficio.indirizzo != null ? ufficio.indirizzo.codiceComune : '',
						// 		"codiceOpzionale": ufficio.indirizzo != null ? ufficio.indirizzo.codiceOpzionale : ''
						// 	},
						// 	"bpPartner": "",
						// 	"frazionario": ticketDataArray[2],
						// 	"objectId": ticketDataArray[0],
						// 	"numTelefono": "",
						// 	"email": "",
						// 	"dateToFormattedString": "",
						// 	"date": "",
						// 	"time": "",
						// 	"documenti": [],

						// 	"noteInviate": {

						// 	},
						// 	"contractGuidString": ""
						// };

						var appToAdd = {};

						listToAdd.push(appToAdd)
					});

					deferred.resolve(listToAdd);
				} else {
					deferred.resolve([]);
				}
			}, function (response) {
				deferred.resolve([]);
			});

			return deferred.promise;
		}

		function doAppuntamentiCalls() {

			$scope.groups = [];

			// Promises of all calls
//			let promises = {
//				storico: getStorico(),
//				tickets: getTickets(),
//				listaAppuntamenti: getAppuntamenti()
//			};

//			$q.all(promises).then(function(responses){
//				console.log(responses);
//				
//				if(responses.storico && Array.isArray(responses.storico) && responses.storico.length > 0){
//					$scope.groups = $scope.groups.concat(responses.storico);
//				}
//				if(responses.tickets && Array.isArray(responses.tickets) && responses.tickets.length > 0){
//					$scope.groups = $scope.groups.concat(responses.tickets);
//					bcTickets(responses.tickets);
//				}
//				if(responses.listaAppuntamenti && Array.isArray(responses.listaAppuntamenti) && responses.listaAppuntamenti.length > 0){
//					$scope.groups = $scope.groups.concat(responses.listaAppuntamenti);
//				}
//				
//				//allineo bordi tabella
//				setTimeout(function () {
//					fixColumn();
//				}, 100);
//			});
			
			getTickets().then(function(tickets){
				if(tickets && Array.isArray(tickets) && tickets.length > 0){
					$scope.groups = $scope.groups.concat(tickets);
					bcTickets(tickets);
				}
				else{
					bcNoTickets();
				}
				
				//allineo bordi tabella
				setTimeout(function () {
					fixColumn();
				}, 100);
			});
		}
		
		function bcNoTickets (){
			$rootScope.$broadcast('no-tickets', {});
		}
		
		function bcTickets (tickets){
			var lastTicket = false;
			var curDate = new Date();
			for (var i in tickets) {
				if(tickets[i].dataAppuntamento > curDate){
					if (!lastTicket) {
						lastTicket = tickets[i];
					}
					else {
						if (tickets[i].dataAppuntamento < lastTicket.dataAppuntamento) {
							lastTicket = tickets[i];
						}
					}
				}
			}
			if (lastTicket) {
				var lastTicketHours = lastTicket.dataAppuntamento.getHours();
				if(lastTicketHours < 10){
					lastTicketHours = '0' + lastTicketHours;
				}
				var lastTicketMinutes = lastTicket.dataAppuntamento.getMinutes();
				if(lastTicketMinutes < 10){
					lastTicketMinutes = '0' + lastTicketMinutes;
				}
				var lastTicketYear = lastTicket.dataAppuntamento.getFullYear();
				var lastTicketMonth = lastTicket.dataAppuntamento.getMonth()+1;
				if(lastTicketMonth < 10){
					lastTicketMonth = '0' + lastTicketMonth;
				}
				var lastTicketDate = lastTicket.dataAppuntamento.getDate();
				if(lastTicketDate < 10){
					lastTicketDate = '0' + lastTicketDate;
				}
				var lastTicketArray = [lastTicket.objectId, lastTicket.esigenze[0].descrizione, lastTicket.frazionario, ''+lastTicketYear+''+lastTicketMonth+''+lastTicketDate+''+lastTicketHours+''+lastTicketMinutes+'00']
				var upLastTicket = {
					frazionario_ext : lastTicket.frazionario,
					descrizione: lastTicket.nomeUP,
					indirizzo : lastTicket.indirizzoUP.indirizzo,
					cap : lastTicket.indirizzoUP.cap,
					descr_comune : lastTicket.indirizzoUP.descrizioneComune,
					cod_provincia : lastTicket.indirizzoUP.codiceProvincia
				}
				console.log('last-ticket', lastTicketArray, upLastTicket);
				$rootScope.$broadcast('last-ticket', { lastTicket: lastTicketArray, upLastTicket: upLastTicket });
			}
		}

		function onInit() {

			//check login tramite chiamata a servizio wcs
			$http.get('/posteit-retail-auth-service/sp-rest/idp-retail/check-session', {
				withCredentials: true
			}).success(function (data) {

				if (!data.esito) {
					// $window.location.href = secureLogin + '?_referer=' + encodeURIComponent(currentLocation);
					return;
				}

				// Call to do for return Groups/Tickets/Appuntamenti
				doAppuntamentiCalls()

			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];
			});
		}

		onInit()

	});

	// renderizza il value in Html
	$scope.getHtml = function (value) {
		return $sce.trustAsHtml(value);
	};

	// controllo delle 24h sulla data appuntamento per modifica
	$scope.isDataValid = function (group) {
		var hModifica = $scope.hModifica;
		var d = new Date();
		var oggi = new Date();
		d.setTime(group.dataAppuntamento);
		d.setHours(d.getHours() - hModifica);


		oggi.setSeconds(0);
		oggi.setMilliseconds(0);
		return (d > oggi || d == oggi);


	};
	// controllo delle 0h sulla data appuntamento per disdetta
	$scope.isDataValidDisdetta = function (group) {
		var hDisdetta = $scope.hDisdetta;
		var d = new Date();
		var oggi = new Date();
		d.setTime(group.dataAppuntamento);
		d.setHours(d.getHours() - hDisdetta);


		oggi.setSeconds(0);
		oggi.setMilliseconds(0);
		return (d > oggi || d == oggi);


	};

	$scope.reverse = true;
	$scope.sortByDate = function (group) {
		var string = '';
		var stringConcat;
		if (group.stato == 'ATTIVO') {
			stringConcat = '1';
		} else {
			stringConcat = '0';
		}
		string = stringConcat + printDate(group.dataAppuntamento);
		return string;
	};

}]);

function printDate(tempDate) {

	var temp = new Date(tempDate);
	var dateStr = padStr(temp.getFullYear()) +
		padStr(1 + temp.getMonth()) +
		padStr(temp.getDate()) +
		padStr(temp.getHours()) +
		padStr(temp.getMinutes()) +
		padStr(temp.getSeconds());

	return dateStr;
}

function padStr(i) {
	return (i < 10) ? "0" + i : "" + i;
}
var accordionCTRL = appuntamento.controller("DisdettaCtrl", ["$scope", "$http", "appuntamentoService", "hostService", function ($scope, $http, appuntamentoService, hostService) {
	$scope.oneAtATime = true;
	var serverHost, urlValue;
	hostService.getHost().then(function (response) {
		urlValue = response.data; // -- success logic
		serverHost = urlValue["HOST_SVILUPPO"];
		var appDataService = appuntamentoService.getAppuntamentoData();
		$scope.riepilogoDisdetta = false;
		$scope.disdici = function (objectID) {

			var appData = appuntamentoService.getAppuntamentoData();
			var disdettaBean = {
				appId: objectID,
				codMotivo: appData.codiceDisdetta
			};
			var req = {
				method: 'PUT',
				url: serverHost + '/appuntamento/delete',
				headers: {
					'Content-Type': 'application/json'
				},
				data: disdettaBean,
				withCredentials: true
			};

			$http(req).success(function (data) {

				//window.location = '#/storicoAppuntamenti';
				$scope.riepilogoDisdetta = true;
			}).error(function (data, status, error) {
				$scope.errorMessages = [{
					"cod": status,
					"msg": data
				}];

				//chiamata al webtrend per errore
				//doAnalitycs('DCSext.mess_errore', data, 'DCSext.uri_errore', window.location);
				var dataLayer = {
					'text_err_alert': data
				}
	
				if(_satellite !== undefined && _satellite !== null) {
					_satellite.track('id_err_alert'); //CORRETTO?
				}
			});
			// window.location = '#/storicoAppuntamenti';

		};

		$scope.appuntamentoData = appDataService;

	});

}]);

var telNumberCTRL = appuntamento.controller("TelNumberCTRL", ["$scope", "$http", "appuntamentoService", "hostService", function ($scope, $http, appuntamentoService, hostService) {
	var serverHost, urlValue;
	hostService.getHost().then(function (response) {
		urlValue = response.data; // -- success logic
		serverHost = urlValue["HOST_SVILUPPO"];
		var appDataService = appuntamentoService.getAppuntamentoData();

		$http.get(serverHost + '/retrieveUser/userContacts/' + appDataService.bpPartner + '/' + appDataService.cfPartner, {
			withCredentials: true
		}).success(function (data) {

			$scope.telNumbers = [];
			$scope.telNumbers.push('Aggiungi');

			if (data.telList != '') {
				var telArray = data.telList;
				for (i = 0; i < telArray.length; i++) {
					$scope.telNumbers.push(telArray[i]);
				}
			}

			if (appDataService.userTel != 'Aggiungi' && appDataService.userTel != '' && appDataService.numTelefono != '') {
				var formaTel = $scope.formatTel(appDataService.numTelefono);

				$scope.appuntamentoData.userTel = formaTel;
				$('[name=numTelefono]').attr('disabled', 'disabled');

				if ($.inArray(appDataService.numTelefono, $scope.telNumbers) == -1) {
					//if(!$scope.telNumbers.includes(appDataService.numTelefono)){
					$scope.telNumbers.push(appDataService.numTelefono);
				}
			} else {
				$scope.appuntamentoData.userTel = appDataService.numTelefono;
				$('[name=numTelefono]').removeAttr('disabled');
			}


		}).error(function (data, status, error) {
			$scope.errorMessages = [{
				"cod": status,
				"msg": data
			}];
		});


		$scope.changeTel = function (newTelNumber) {
			$scope.appuntamentoData.userTel = newTelNumber;

			if (newTelNumber != 'Aggiungi') {
				$scope.appuntamentoData.numTelefono = newTelNumber;
				$scope.appuntamentoData.userTel = $scope.formatTel(newTelNumber);

				$('[name=numTelefono]').attr('disabled', 'disabled');

				appuntamentoService.setAppuntamentoData($scope.appuntamentoData);
			} else {
				$scope.appuntamentoData.userTel = '';
				$scope.appuntamentoData.numTelefono = '';
				$('[name=numTelefono]').removeAttr('disabled');
			}
			//chiamata al webtrend
			doAnalitycs('DCS.dcsuri', 'alias_appto_c_riepilogo', 'DCSext.motivo_appuntamento', $scope.appuntamentoData.codice, 'WT.si_n', 'Presa-Appuntamento', 'WT.si_x', '5');

		};

		$scope.onBlurTel = function () {
			$scope.appuntamentoData.numTelefono = $scope.appuntamentoData.userTel;

			if ($scope.appuntamentoData.userTel == '') {
				$scope.appuntamentoData.numTelefono = '';
			}
		}

		$scope.formatTel = function (tel) {
			//parte asteriscata
			var stringAsPad = "*".toString().padLeft("*", tel.length - 3);
			//parte in chiaro (ultimi 3 caratteri)
			var telSub = tel.substring(tel.length - 3, tel.length);

			var result = stringAsPad.concat(telSub);
			return result;
		}


	});
}]);

// padding left
String.prototype.padLeft = function (paddingChar, length) {

	var s = new String(this);

	if ((this.length < length) && (paddingChar.toString().length > 0)) {
		for (var i = 0; i < (length - this.length); i++)
			s = paddingChar.toString().charAt(0).concat(s);
	}

	return s;
};
natDays = [
	[1, 6, 'it'],
	[4, 25, 'it'],
	[5, 1, 'it'],
	[12, 25, 'it'],
	[12, 26, 'it'],
	[12, 8, 'it'],
	[6, 2, 'it'],
	[1, 1, 'it'],
	[11, 1, 'it'],
	[8, 15, 'it']
];

function initNoSundaysOrHolydays(date) {
	return noSundaysOrHolydays(date, natDays);
}

function noSundaysOrHolydays(date, natDays) {
	var noSunday = noSundays(date);
	if (noSunday) {
		return nationalDays(date, natDays);
	} else {
		return noSunday;
	}
}

function nationalDays(date, natDays) {

	//se provengo dallo storico disabilito i giorni dalla data storico fino alla data minima 
	if (typeof (dataStorico) != 'undefined' && dataStorico != '' && dataStart != '') {
		var d = splitToDate(dataStorico);
		if (date > d && date < dataStart) {
			return false;
		}
	}

	for (i = 0; i < natDays.length; i++) {
		if (date.getMonth() == natDays[i][0] - 1 &&
			date.getDate() == natDays[i][1]) {
			return false;
		}
	}
	return true;
}

function noSundays(date) {
	var day = date.getDay();
	return day != 0;

}

function splitToDate(dataToSplit) {
	var dataSplit = dataToSplit.split("-");
	var d = new Date();
	d.setFullYear(dataSplit[2]);
	d.setMonth(dataSplit[1] - 1);
	d.setDate(dataSplit[0]);
	d.setHours(0);
	d.setMinutes(0);
	d.setSeconds(0);
	d.setMilliseconds(0);

	return d;
}

var monthNames = [
	"Gennaio", "Febbraio", "Marzo",
	"Aprile", "Maggio", "Giugno", "Luglio",
	"Agosto", "Settembre", "Ottobre",
	"Novembre", "Dicembre"
];

function getCalendario(appuntamentoData) {

	// alert('getCalendario');
	var dataInizio = appuntamentoData.dataInizio;
	var dataFine = appuntamentoData.dataFine;
	var day = dataInizio.split(" ")[0];
	var dayArray = day.split("/");
	var anno = dayArray[2];
	var mese = dayArray[1];
	var giorno = dayArray[0];
	var oraInizio = dataInizio.split(" ")[1].replace(/\./g, "");
	var oraFine = dataFine.split(" ")[1].replace(/\./g, "");
	var msgData1 = anno + (mese) + giorno + 'T' + oraInizio + '00';
	var msgData2 = anno + (mese) + giorno + 'T' + oraFine + '00';
	var msgData3 = appuntamentoData.indUfficio;
	var email = appuntamentoData.email;

	var icsMSG = "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Our Company//NONSGML v1.0//EN\nBEGIN:VEVENT\nDTSTAMP:20120315T170000Z\nDTSTART:" + msgData1 + "\nDTEND:" + msgData2 + "\nLOCATION:" + msgData3 + "\nSUMMARY:Il tuo appuntamento\nEND:VEVENT\nEND:VCALENDAR";
	return icsMSG;

};

function setIconSearch() {
	$('#iconSearch').class();
}

function titleCase(string) {
	return string.charAt(0).toUpperCase() + string.slice(1);
}

function fixColumn() {

	var maxHeight;
	var heights = $(".content-tiket-details > span").map(function () {
			return $(this).height();
		}).get(),

		maxHeight = Math.max.apply(null, heights);

	$(".content-tiket-details > span").height(maxHeight);
}
