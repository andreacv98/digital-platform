


(function () {
    'use strict';

    angular.module('MyPoste')
        .controller("StoricoAppuntamentoController", StoricoAppuntamentoController);

    StoricoAppuntamentoController.$inject = ['$scope', '$rootScope', 'appuntamentoService'];

    function StoricoAppuntamentoController($scope, $rootScope, appuntamentoService) {

        $scope.appuntamenti = [];

        /**********************************
         * UTILS
         *********************************/

        $scope.mese = {
            '01': 'Gen',
            '02': 'Feb',
            '03': 'Mar',
            '04': 'Apr',
            '05': 'Mag',
            '06': 'Giu',
            '07': 'Lug',
            '08': 'Ago',
            '09': 'Set',
            '10': 'Ott',
            '11': 'Nov',
            '12': 'Dic'
        };

        $scope.decodeStato = {
            0: {
                label:'Aperto',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            1: {
                label:'Svolto con vendita',
                class: 'text-success',
                editable: false,
                disposable: false
            },
            2: {
                label:'Svolto senza vendita',
                class: 'text-success',
                editable: false,
                disposable: false
            },
            3: {
                label:'Annullato',
                class: 'text-error',
                editable: false,
                disposable: false
            },
            4: {
                label:'Scaduto',
                class: 'text-error',
                editable: false,
                disposable: false
            },
            5: {
                // label:'Pianificato',
                // class: 'text-dark',
                // editable: true,
                // disposable: true
                label:'Confermato',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            6: {
                label:'Concluso',
                class: 'text-success',
                editable: false,
                disposable: false
            },
            7: {
                // label:'Pianificato da confermare',
                // class: 'text-dark',
                // editable: true,
                // disposable: true
                label:'Confermato',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            8: {
                // label:'Pianificato da contattare',
                // class: 'text-dark',
                // editable: true,
                // disposable: true
                label:'Confermato',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            9: {
                label:'Svolto con segnalazione',
                class: 'text-success',
                editable: false,
                disposable: false
            },
            10: {
                label:'Confermato',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            11: {
                // label:'Assegnato da confermare',
                // class: 'text-dark',
                // editable: true,
                // disposable: true
                label:'Confermato',
                class: 'text-success',
                editable: true,
                disposable: true
            },
            12: {
                label:'Bozza',
                class: 'text-dark',
                editable: true,
                disposable: true
            },
        };

        $scope.decodeUp = function(up){
            if(up){
                switch(up){
                    case "U": return "Ufficio postale";
                    case "A": return "Ufficio postale modulare";
                    case "E": return "";
                    case "T": return "";
                    case "UU": return "Ufficio postale filatelico";
                    case "PAMAT": return "Paccomat";
                    case "APT": return "Punto poste locker";
                    case "RTZ": return "Punto poste";
                }
            }
            return "";

        };

        $scope.decodeCanale = function(codice,label){          
            switch(codice){
                case 892570000: return "Ufficio postale"; break;
                case 892570001: return "Ufficio Postale"; break;
                case 892570002: return label; break;
                case 892570003: return "Sito Web"; break;
                case 892570004: return "App"; break;
                case 892570005: return "Ufficio Postale"; break;
                case 892570006: return "Ufficio Postale"; break;                   
            }
            return "";
        };

        /**
         * @param word parola da asteriscare, differenzio
         * @returns parola asteriscata se word esiste, altrimenti ritorno *****
         */
        $scope.setShadow = function(word) {
            if (typeof word !== 'undefined' && word !== null) {
                var index = word.indexOf('@');
                if(index === -1) { //Array(word.length -2).join("*")
                    word = Array(word.length -2).join("*") + word.substring(word.length - 3);
                } else {
                    word = word.substring(1,0) + Array(index -1).join("*")+  word.substring(index-1, word.length);
                }
                return word;
            }
            return '*****'; // hide generico
        };

        var filterGetAppuntamenti = function(appuntamento) { //todo sistemare array
            //return new Date(appuntamento.DATA_APPUNTAMENTO) >= new Date() && [0, 3, 10, 12].indexOf(appuntamento.STATO_APPUNTAMENTO_CODE) !== -1;
            return new Date(appuntamento.DATA_APPUNTAMENTO) >= new Date();
        };

        /**********************************
         * FUNCTION
         *********************************/

        $scope.preparazioneDisdici = function(id) {
            $scope.disdiciAppuntamento = id;
        };

        $scope.isNotActiveForEdit = function(index){
            return  new Date($scope.appuntamenti[index].DATA_APPUNTAMENTO) <= new Date() ||
                !$scope.decodeStato[$scope.appuntamenti[index].STATO_APPUNTAMENTO_CODE].editable ;
        };

        $scope.isNotActiveForDispose = function(index){
            return  new Date($scope.appuntamenti[index].DATA_APPUNTAMENTO) <= new Date() ||
                !$scope.decodeStato[$scope.appuntamenti[index].STATO_APPUNTAMENTO_CODE].disposable ;
        };

        /**
         * didisco un appuntamento in posizione id
         * @param id
         */
        $scope.disdici = function() {
            var id = $scope.disdiciAppuntamento;
            appuntamentoService.rimuoviAppuntamento($scope.appuntamenti[id]).then(function(response){
                if(response.data){
                    console.log(response.data);
                    $scope.appuntamenti[id].STATO_APPUNTAMENTO = response.data.APPUNTAMENTO.STATO_APPUNTAMENTO;
                    $scope.appuntamenti[id].STATO_APPUNTAMENTO_CODE = response.data.APPUNTAMENTO.STATO_APPUNTAMENTO_CODE;
                }
            }, function(error){
                console.log("errore",error);
            });
        };
        /**
         * modifico un appuntamento in posizione id
         * @param id
         */
        $scope.modifica = function(id) {
            // cambio pagina
            window.location.href = "/prenota-appuntamento?appuntamento="+$scope.appuntamenti[id].ID_APPUNTAMENTO;
        };

        /**
         * recupero tutti gli appuntamenti dell'utente.
         */
        var getStoricoAppuntamenti = function() { //todo a partire da quando recupero gli appuntamenti?
            console.log("user", $rootScope.userClaims);

            var today = new Date();

            var strDate = 'Y-m-d'
                .replace('Y', today.getFullYear())
                .replace('m', ('0' + (today.getMonth()+1)).slice(-2))
                .replace('d', ('0' + today.getDate()).slice(-2));

            var strDateEnd = 'Y-m-d'
                .replace('Y', today.getFullYear()+1)
                .replace('m', ('0' + (today.getMonth()+1)).slice(-2))
                .replace('d', ('0' + today.getDate()).slice(-2));

            var user = {
                dataInizio: strDate, //YYYY-MM-DD
                dataFine: strDateEnd,
            };

            appuntamentoService.getAppuntamenti(user).then(function(response){
               if(response.data && response.data.INFO.RESULT_CODE === "0" && response.data.APPUNTAMENTO){
                   $scope.appuntamenti = response.data.APPUNTAMENTO;
                   if($scope.appuntamenti.length > 0) {
                       $scope.appuntamenti = $scope.appuntamenti.filter(function(appuntamento) {
                           return filterGetAppuntamenti(appuntamento);
                       });
                       $scope.appuntamenti.sort(function(a,b){
                           return new Date(b.DATA_APPUNTAMENTO) - new Date(a.DATA_APPUNTAMENTO);
                       });
                   }
               }
            }, function(error){
                console.log("errore",error);
            });
        };

        /**********************************
         * INIT
         *********************************/

        $scope.$on('$viewContentLoaded', function() {
            $scope.$watch('userClaims', function () {
                if ($rootScope.userClaims != null) {
                    getStoricoAppuntamenti();
                }
            });
        });
    }

})();

