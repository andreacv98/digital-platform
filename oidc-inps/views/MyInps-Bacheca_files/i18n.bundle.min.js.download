function manageElementDataAttribute(elem,datasetKey){let dataset=sortElementDataAttribute(elem,datasetKey);Object.keys(dataset).forEach(function(key){if(key===datasetKey){let opt=dataset[key].split(";");opt.length>1?(dataset[key]=dataset[key].split(";")[0],dataset[key]!==i18next.t(dataset[key])&&defaultCase(elem,dataset,key,parseInt(opt[1]))):dataset[key]!==i18next.t(dataset[key])&&defaultCase(elem,dataset,key,0)}else advancedCase(elem,dataset,key)})}function defaultCase(elem,dataset,key,position){let nodeList=elem.querySelectorAll("*");if(nodeList=Array.from(nodeList),position===0)elem.textContent=i18next.t(dataset[key]),nodeList.forEach(function(node){return elem.appendChild(node)});else{let start=nodeList.slice(0,position),end=nodeList.slice(position,nodeList.length),txtNode=document.createTextNode(i18next.t(dataset[key]));start.push(txtNode);nodeList=start.concat(end);elem.textContent="";nodeList.forEach(function(node){return elem.appendChild(node)})}}function advancedCase(elem,dataset,key){let attributes=key.split(/(?=[A-Z])/);attributes.forEach(function(OptionalAttr,i){i!==0&&(elem[OptionalAttr.toLowerCase()]=i18next.t(dataset[key]))})}function sortElementDataAttribute(elem,datasetKey){let dataset=Object.keys(elem.dataset).filter(function(dSet){return dSet.substring(0,datasetKey.length)===datasetKey}),purifiedDataset={};return dataset.forEach(function(langKey){purifiedDataset[langKey]=elem.dataset[langKey]}),purifiedDataset}function updateContent(){initialConfig.testScripts&&_PerformanceTests("start");stopObserving();try{let elList=document.body.querySelectorAll("[data-lang]");elList=Array.from(elList);elList.forEach(function(elem){manageElementDataAttribute(elem,"lang")});Logger(["detected user language: ",i18next.language," --> loaded languages: ",initialConfig.whiteList.join(", "),]);startObserving()}catch(err){Logger([err])}initialConfig.testScripts&&_PerformanceTests("stop")}function changeLng(lng){i18next.changeLanguage(lng)}function startObserving(){Logger(["STARTED Observing..."]);mutationObserver=new MutationObserver(function(mutations){mutations.forEach(function(mutation){Logger([mutation]);updateContent()})});mutationObserver.observe(document.documentElement,{characterDataOldValue:!1,characterData:!1,childList:!0,subtree:!0,attributeOldValue:!0,attributes:!0,attributeFilter:["data-lang"]});observing=!0}function stopObserving(){Logger(["STOPED Observing..."]);observing&&mutationObserver.disconnect();observing=!1}function Logger(messages){initialConfig&&initialConfig.debug&&console.log(messages)}function CookieLngDetection(configuration){let lng=getCookie("sLang");if(configuration&&configuration.lng)return configuration;if(lng){let newConfiguration=configuration;return newConfiguration.lng=lng,newConfiguration}return configuration}function getCookie(cname){for(var c,name=cname+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(c=ca[i];c.charAt(0)==" ";)c=c.substring(1);if(c.indexOf(name)==0)return c.substring(name.length,c.length)}return""}var initialConfig={lng:initOptI18N.lng?initOptI18N.lng:"it",fallbackLng:"it",debug:!1,whiteList:initOptI18N.whiteList?initOptI18N.whiteList:["it","en","de"],ns:"translation",backend:{backends:[i18nextLocalStorageBackend,i18nextHttpBackend],backendOptions:[{expirationTime:initOptI18N.expirationTime?initOptI18N.expirationTime:3e5,store:window.sessionStorage},{loadPath:initOptI18N.loadPath?initOptI18N.loadPath:"/js/i18n/{{lng}}.json"}]},testScripts:!1},mutationObserver,observing;try{initialConfig=CookieLngDetection(initialConfig);i18next.use(i18nextChainedBackend).init(initialConfig)}catch(err){Logger([err])}Logger(["CONFIGURATION IN USE:",initialConfig]);i18next.on("initialized",function(){updateContent()});i18next.on("languageChanged",function(){updateContent()});i18next.on("loaded",function(loaded){Logger(["new resource loaded:",loaded])});observing=!1;